{"D:\\easy\\app2\\src\\lib\\Arr.ts":{"path":"D:\\easy\\app2\\src\\lib\\Arr.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":11,"column":21},"end":{"line":11,"column":52}},"2":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"3":{"start":{"line":13,"column":12},"end":{"line":13,"column":22}},"4":{"start":{"line":15,"column":8},"end":{"line":15,"column":84}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":41},"end":{"line":16,"column":5}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":29},"end":{"line":10,"column":39}},"type":"default-arg","locations":[{"start":{"line":10,"column":37},"end":{"line":10,"column":39}}],"line":10},"1":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12},"2":{"loc":{"start":{"line":15,"column":15},"end":{"line":15,"column":83}},"type":"cond-expr","locations":[{"start":{"line":15,"column":39},"end":{"line":15,"column":75}},{"start":{"line":15,"column":78},"end":{"line":15,"column":83}}],"line":15},"3":{"loc":{"start":{"line":15,"column":39},"end":{"line":15,"column":75}},"type":"cond-expr","locations":[{"start":{"line":15,"column":47},"end":{"line":15,"column":65}},{"start":{"line":15,"column":68},"end":{"line":15,"column":75}}],"line":15}},"s":{"0":1,"1":30,"2":30,"3":4,"4":26,"5":1},"f":{"0":30},"b":{"0":[29],"1":[4,26],"2":[26,0],"3":[1,25]},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\lib\\Arr.ts","sources":["D:\\easy\\app2\\src\\lib\\Arr.ts"],"names":[],"mappings":";;AAAA;;;;;GAKG;AACH,MAAqB,GAAG;IACb,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,GAAG,EAAE;QACtC,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;QAE7C,IAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAG;YACxB,OAAO,EAAE,CAAC;SACb;QAED,OAAO,CAAE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACjF,CAAC;CACJ;AAVD,sBAUC","sourcesContent":["/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 5/26/2020\r\n * Time: 4:04 PM\r\n */\r\nexport default class Arr {\r\n    public static array_wrap(value, split = ''): any[] {\r\n        const list = [void (0), null, undefined, ''];\r\n\r\n        if ( list.includes(value) ) {\r\n            return [];\r\n        }\r\n\r\n        return ! Array.isArray(value) ? split ? value.split(split) : [value] : value;\r\n    }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c10676deb2fdc6b95a848226f82d9bedd32c95f5","contentHash":"cbf776f303b5d3dc6ed6b013b04483127163365c7f3d0c6e15ed257bc62d9ff8"},"D:\\easy\\app2\\src\\Repositories\\Criteria\\Criteria.ts":{"path":"D:\\easy\\app2\\src\\Repositories\\Criteria\\Criteria.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\Repositories\\Criteria\\Criteria.ts","sources":["D:\\easy\\app2\\src\\Repositories\\Criteria\\Criteria.ts"],"names":[],"mappings":";;AAIA;;;;;GAKG;AAEH,MAAsB,QAAQ;CAE7B;AAFD,4BAEC","sourcesContent":["import {ModelQueryBuilderContract} from \"@tngraphql/lucid/build/src/Contracts/Model/ModelQueryBuilderContract\";\r\nimport {LucidModel} from \"@tngraphql/lucid/build/src/Contracts/Model/LucidModel\";\r\nimport {BaseRepository} from \"../Lucid/BaseRepository\";\r\n\r\n/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 5/26/2020\r\n * Time: 9:00 PM\r\n */\r\n\r\nexport abstract class Criteria {\r\n    public abstract apply(query: ModelQueryBuilderContract<LucidModel>, repository: BaseRepository);\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0cbeafb36daab7b353728a50986b28cdea21bb78","contentHash":"d947aff43eb7086a6ec2d150d29a51a4f1274af3455dd75d4f7d25408e3cb825"},"D:\\easy\\app2\\src\\Repositories\\Lucid\\BaseRepository.ts":{"path":"D:\\easy\\app2\\src\\Repositories\\Lucid\\BaseRepository.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":9,"column":19},"end":{"line":9,"column":50}},"2":{"start":{"line":10,"column":16},"end":{"line":10,"column":42}},"3":{"start":{"line":11,"column":20},"end":{"line":11,"column":71}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":35}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":28}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":47}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":21}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":43}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":20}},"10":{"start":{"line":27,"column":8},"end":{"line":27,"column":33}},"11":{"start":{"line":28,"column":8},"end":{"line":28,"column":20}},"12":{"start":{"line":31,"column":8},"end":{"line":31,"column":35}},"13":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"14":{"start":{"line":35,"column":8},"end":{"line":35,"column":47}},"15":{"start":{"line":36,"column":8},"end":{"line":36,"column":20}},"16":{"start":{"line":39,"column":8},"end":{"line":39,"column":35}},"17":{"start":{"line":42,"column":8},"end":{"line":42,"column":29}},"18":{"start":{"line":43,"column":8},"end":{"line":43,"column":43}},"19":{"start":{"line":46,"column":8},"end":{"line":46,"column":29}},"20":{"start":{"line":47,"column":23},"end":{"line":47,"column":64}},"21":{"start":{"line":48,"column":19},"end":{"line":48,"column":66}},"22":{"start":{"line":49,"column":17},"end":{"line":49,"column":52}},"23":{"start":{"line":50,"column":8},"end":{"line":51,"column":30}},"24":{"start":{"line":51,"column":12},"end":{"line":51,"column":30}},"25":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"26":{"start":{"line":53,"column":12},"end":{"line":53,"column":29}},"27":{"start":{"line":55,"column":8},"end":{"line":62,"column":10}},"28":{"start":{"line":65,"column":8},"end":{"line":65,"column":49}},"29":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"30":{"start":{"line":69,"column":12},"end":{"line":69,"column":31}},"31":{"start":{"line":71,"column":22},"end":{"line":71,"column":42}},"32":{"start":{"line":72,"column":25},"end":{"line":72,"column":71}},"33":{"start":{"line":73,"column":8},"end":{"line":73,"column":33}},"34":{"start":{"line":76,"column":8},"end":{"line":76,"column":51}},"35":{"start":{"line":77,"column":23},"end":{"line":77,"column":25}},"36":{"start":{"line":78,"column":22},"end":{"line":78,"column":42}},"37":{"start":{"line":79,"column":21},"end":{"line":79,"column":68}},"38":{"start":{"line":80,"column":8},"end":{"line":86,"column":12}},"39":{"start":{"line":81,"column":28},"end":{"line":81,"column":42}},"40":{"start":{"line":82,"column":12},"end":{"line":84,"column":13}},"41":{"start":{"line":83,"column":16},"end":{"line":83,"column":42}},"42":{"start":{"line":85,"column":12},"end":{"line":85,"column":27}},"43":{"start":{"line":87,"column":8},"end":{"line":87,"column":52}},"44":{"start":{"line":90,"column":8},"end":{"line":90,"column":39}},"45":{"start":{"line":93,"column":22},"end":{"line":93,"column":42}},"46":{"start":{"line":94,"column":8},"end":{"line":97,"column":11}},"47":{"start":{"line":95,"column":12},"end":{"line":95,"column":30}},"48":{"start":{"line":96,"column":12},"end":{"line":96,"column":32}},"49":{"start":{"line":100,"column":8},"end":{"line":100,"column":33}},"50":{"start":{"line":101,"column":8},"end":{"line":101,"column":20}},"51":{"start":{"line":104,"column":8},"end":{"line":104,"column":36}},"52":{"start":{"line":105,"column":8},"end":{"line":105,"column":20}},"53":{"start":{"line":108,"column":8},"end":{"line":108,"column":30}},"54":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"55":{"start":{"line":112,"column":12},"end":{"line":112,"column":24}},"56":{"start":{"line":114,"column":8},"end":{"line":118,"column":9}},"57":{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},"58":{"start":{"line":116,"column":16},"end":{"line":116,"column":50}},"59":{"start":{"line":119,"column":8},"end":{"line":119,"column":20}},"60":{"start":{"line":122,"column":8},"end":{"line":131,"column":9}},"61":{"start":{"line":124,"column":24},"end":{"line":126,"column":14}},"62":{"start":{"line":125,"column":16},"end":{"line":125,"column":66}},"63":{"start":{"line":128,"column":12},"end":{"line":130,"column":13}},"64":{"start":{"line":129,"column":16},"end":{"line":129,"column":46}},"65":{"start":{"line":132,"column":8},"end":{"line":132,"column":38}},"66":{"start":{"line":133,"column":8},"end":{"line":133,"column":20}},"67":{"start":{"line":136,"column":0},"end":{"line":136,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":18},"end":{"line":21,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":12},"end":{"line":25,"column":5}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":22},"end":{"line":29,"column":5}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":23},"end":{"line":33,"column":5}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":31},"end":{"line":37,"column":5}},"line":34},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":16},"end":{"line":40,"column":5}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":18},"end":{"line":44,"column":5}},"line":41},"7":{"name":"(anonymous_7)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":58},"end":{"line":63,"column":5}},"line":45},"8":{"name":"(anonymous_8)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":23},"end":{"line":66,"column":5}},"line":64},"9":{"name":"(anonymous_9)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":52},"end":{"line":74,"column":5}},"line":67},"10":{"name":"(anonymous_10)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":54},"end":{"line":88,"column":5}},"line":75},"11":{"name":"(anonymous_11)","decl":{"start":{"line":80,"column":35},"end":{"line":80,"column":36}},"loc":{"start":{"line":80,"column":48},"end":{"line":86,"column":9}},"line":80},"12":{"name":"(anonymous_12)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":17},"end":{"line":91,"column":5}},"line":89},"13":{"name":"(anonymous_13)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":61},"end":{"line":98,"column":5}},"line":92},"14":{"name":"(anonymous_14)","decl":{"start":{"line":94,"column":83},"end":{"line":94,"column":84}},"loc":{"start":{"line":94,"column":100},"end":{"line":97,"column":9}},"line":94},"15":{"name":"(anonymous_15)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":17},"end":{"line":102,"column":5}},"line":99},"16":{"name":"(anonymous_16)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":32},"end":{"line":106,"column":5}},"line":103},"17":{"name":"(anonymous_17)","decl":{"start":{"line":107,"column":4},"end":{"line":107,"column":5}},"loc":{"start":{"line":107,"column":18},"end":{"line":109,"column":5}},"line":107},"18":{"name":"(anonymous_18)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":20},"end":{"line":120,"column":5}},"line":110},"19":{"name":"(anonymous_19)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":27},"end":{"line":134,"column":5}},"line":121},"20":{"name":"(anonymous_20)","decl":{"start":{"line":124,"column":49},"end":{"line":124,"column":50}},"loc":{"start":{"line":124,"column":58},"end":{"line":126,"column":13}},"line":124}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":10},"end":{"line":26,"column":20}},"type":"default-arg","locations":[{"start":{"line":26,"column":18},"end":{"line":26,"column":20}}],"line":26},"1":{"loc":{"start":{"line":30,"column":11},"end":{"line":30,"column":21}},"type":"default-arg","locations":[{"start":{"line":30,"column":20},"end":{"line":30,"column":21}}],"line":30},"2":{"loc":{"start":{"line":45,"column":19},"end":{"line":45,"column":31}},"type":"default-arg","locations":[{"start":{"line":45,"column":29},"end":{"line":45,"column":31}}],"line":45},"3":{"loc":{"start":{"line":45,"column":33},"end":{"line":45,"column":46}},"type":"default-arg","locations":[{"start":{"line":45,"column":43},"end":{"line":45,"column":46}}],"line":45},"4":{"loc":{"start":{"line":45,"column":48},"end":{"line":45,"column":56}},"type":"default-arg","locations":[{"start":{"line":45,"column":55},"end":{"line":45,"column":56}}],"line":45},"5":{"loc":{"start":{"line":50,"column":8},"end":{"line":51,"column":30}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":51,"column":30}},{"start":{"line":50,"column":8},"end":{"line":51,"column":30}}],"line":50},"6":{"loc":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},{"start":{"line":52,"column":8},"end":{"line":54,"column":9}}],"line":52},"7":{"loc":{"start":{"line":67,"column":21},"end":{"line":67,"column":50}},"type":"default-arg","locations":[{"start":{"line":67,"column":33},"end":{"line":67,"column":50}}],"line":67},"8":{"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},{"start":{"line":68,"column":8},"end":{"line":70,"column":9}}],"line":68},"9":{"loc":{"start":{"line":75,"column":23},"end":{"line":75,"column":52}},"type":"default-arg","locations":[{"start":{"line":75,"column":35},"end":{"line":75,"column":52}}],"line":75},"10":{"loc":{"start":{"line":76,"column":14},"end":{"line":76,"column":50}},"type":"cond-expr","locations":[{"start":{"line":76,"column":35},"end":{"line":76,"column":38}},{"start":{"line":76,"column":41},"end":{"line":76,"column":50}}],"line":76},"11":{"loc":{"start":{"line":82,"column":12},"end":{"line":84,"column":13}},"type":"if","locations":[{"start":{"line":82,"column":12},"end":{"line":84,"column":13}},{"start":{"line":82,"column":12},"end":{"line":84,"column":13}}],"line":82},"12":{"loc":{"start":{"line":87,"column":15},"end":{"line":87,"column":51}},"type":"cond-expr","locations":[{"start":{"line":87,"column":37},"end":{"line":87,"column":42}},{"start":{"line":87,"column":45},"end":{"line":87,"column":51}}],"line":87},"13":{"loc":{"start":{"line":92,"column":30},"end":{"line":92,"column":59}},"type":"default-arg","locations":[{"start":{"line":92,"column":42},"end":{"line":92,"column":59}}],"line":92},"14":{"loc":{"start":{"line":103,"column":17},"end":{"line":103,"column":30}},"type":"default-arg","locations":[{"start":{"line":103,"column":26},"end":{"line":103,"column":30}}],"line":103},"15":{"loc":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},{"start":{"line":111,"column":8},"end":{"line":113,"column":9}}],"line":111},"16":{"loc":{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},"type":"if","locations":[{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},{"start":{"line":115,"column":12},"end":{"line":117,"column":13}}],"line":115},"17":{"loc":{"start":{"line":122,"column":8},"end":{"line":131,"column":9}},"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":131,"column":9}},{"start":{"line":122,"column":8},"end":{"line":131,"column":9}}],"line":122},"18":{"loc":{"start":{"line":128,"column":12},"end":{"line":130,"column":13}},"type":"if","locations":[{"start":{"line":128,"column":12},"end":{"line":130,"column":13}},{"start":{"line":128,"column":12},"end":{"line":130,"column":13}}],"line":128}},"s":{"0":1,"1":1,"2":1,"3":1,"4":21,"5":21,"6":21,"7":21,"8":22,"9":22,"10":2,"11":2,"12":1,"13":1,"14":3,"15":3,"16":2,"17":3,"18":3,"19":2,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":1,"28":5,"29":3,"30":1,"31":2,"32":2,"33":2,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":3,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":3,"52":3,"53":6,"54":5,"55":1,"56":4,"57":2,"58":2,"59":4,"60":7,"61":5,"62":1,"63":5,"64":1,"65":7,"66":7,"67":1},"f":{"0":21,"1":22,"2":2,"3":1,"4":3,"5":2,"6":3,"7":2,"8":5,"9":3,"10":1,"11":1,"12":3,"13":1,"14":1,"15":1,"16":3,"17":6,"18":5,"19":7,"20":1},"b":{"0":[0],"1":[0],"2":[1],"3":[1],"4":[1],"5":[1,0],"6":[0,1],"7":[1],"8":[1,2],"9":[1],"10":[1,0],"11":[1,0],"12":[0,1],"13":[0],"14":[2],"15":[1,4],"16":[2,0],"17":[5,2],"18":[1,4]},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\Repositories\\Lucid\\BaseRepository.ts","sources":["D:\\easy\\app2\\src\\Repositories\\Lucid\\BaseRepository.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 5/26/2020\r\n * Time: 8:32 AM\r\n */\r\nimport {Criteria} from \"../Criteria/Criteria\";\r\nimport {ModelQueryBuilderContract} from \"@tngraphql/lucid/build/src/Contracts/Model/ModelQueryBuilderContract\";\r\nimport {LucidModel} from \"@tngraphql/lucid/build/src/Contracts/Model/LucidModel\";\r\nimport {LucidRow, ModelAttributes} from \"@tngraphql/lucid/build/src/Contracts/Model/LucidRow\";\r\nimport {IReadRepository} from \"../Contracts/IReadRepository\";\r\nimport {IWriteRepository} from \"../Contracts/IWriteRepository\";\r\nimport {tap} from \"../../lib/utils\";\r\nimport {BaseModel} from \"@tngraphql/lucid/build/src/Orm/BaseModel\";\r\n\r\nexport abstract class BaseRepository<T extends LucidRow = LucidRow> implements IReadRepository, IWriteRepository{\r\n    abstract model(): LucidModel;\r\n\r\n    constructor() {\r\n        this.query();\r\n    }\r\n\r\n    public _query: ModelQueryBuilderContract<LucidModel, T>;\r\n\r\n    protected _skipCriteria: boolean = false;\r\n\r\n    protected _criteria: any[] = [];\r\n\r\n    /**\r\n     * Prevents from overwriting same criteria in chain usage\r\n     */\r\n    protected preventCriteriaOverwriting: boolean = true;\r\n\r\n    public query() {\r\n        this._query = this.model().query();\r\n        return this;\r\n    }\r\n\r\n    public limit(limit: number = 20): this {\r\n        this._query.limit(limit);\r\n        return this;\r\n    }\r\n\r\n    public offset(offset: number = 0): this {\r\n        this._query.offset(offset);\r\n        return this;\r\n    }\r\n\r\n    public orderBy(column: string, direction?: 'asc' | 'desc') {\r\n        this._query.orderBy(column, direction);\r\n        return this;\r\n    }\r\n\r\n    public async all(): Promise<T[]> {\r\n        return (await this._query);\r\n    }\r\n\r\n    public async first(): Promise<T> {\r\n        this.applyCriteria();\r\n        return (await this._query.first());\r\n    }\r\n\r\n    public async paginate(perPage: number = 20, columns: any = '*', page: number = 1) {\r\n        this.applyCriteria();\r\n        const result = await this._query.paginate(page, perPage);\r\n\r\n        let from = (result.perPage * (result.currentPage - 1)) + 1;\r\n\r\n        let to = result.perPage * result.currentPage;\r\n        if (to > result.total) to = result.total;\r\n        if (!result.total) {\r\n            from = to = null;\r\n        }\r\n\r\n        return {\r\n            from,\r\n            to,\r\n            perPage: result.perPage,\r\n            currentPage: result.currentPage,\r\n            total: result.total,\r\n            data: result.all()\r\n        };\r\n    }\r\n\r\n    public async create(data: Partial<ModelAttributes<T>>): Promise<T> {\r\n        return (await this.model().create(data)) as T;\r\n    }\r\n\r\n    public async delete(id: any, attribute: string = this.getKeyName()): Promise<number> {\r\n        if (id instanceof BaseModel) {\r\n            return id.delete();\r\n        }\r\n\r\n        const query = this.model().query();\r\n\r\n        const instance = await query.where(attribute, id).firstOrFail();\r\n\r\n        return instance.delete();\r\n    }\r\n\r\n    public async destroy(ids: any, attribute: string = this.getKeyName()): Promise<boolean | any[]> {\r\n        ids = Array.isArray(ids) ? ids : arguments;\r\n\r\n        const result = [];\r\n\r\n        const query = this.model().query();\r\n        const data = await query.where(this.getKeyName(), 'in', ids);\r\n\r\n        await Promise.all(data.map(async (x) => {\r\n            const deleted = this.delete(x);\r\n            if (deleted) {\r\n                result.push(x[attribute]);\r\n            }\r\n            return deleted;\r\n        }));\r\n\r\n        return result.length === 0 ? false : result;\r\n    }\r\n\r\n    protected getKeyName(): string {\r\n        return this.model().primaryKey;\r\n    }\r\n\r\n    public async update(data: Partial<ModelAttributes<T>>, value: any, attribute: string = this.getKeyName()): Promise<T> {\r\n        const query = this.model().query();\r\n\r\n        return tap(await query.where(attribute, '=', value).firstOrFail(), async (value: LucidRow) => {\r\n            value.merge(data);\r\n            return value.save();\r\n        });\r\n    }\r\n\r\n    public resetScope(): this {\r\n        this.skipCriteria(false);\r\n        return this;\r\n    }\r\n\r\n    public skipCriteria(status: boolean = true): this {\r\n        this._skipCriteria = status;\r\n        return this;\r\n    }\r\n\r\n    public getCriteria(): Criteria[] {\r\n        return this._criteria;\r\n    }\r\n\r\n    public applyCriteria(): this {\r\n        if (this._skipCriteria === true) {\r\n            return this;\r\n        }\r\n\r\n        for (let criteria of this.getCriteria()) {\r\n            if (criteria instanceof Criteria) {\r\n                criteria.apply(this._query, this);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public pushCriteria(criteria: Criteria): this {\r\n        if (this.preventCriteriaOverwriting) {\r\n            // Find existing criteria\r\n            const key = this._criteria.findIndex(value => {\r\n                return value.constructor === criteria.constructor;\r\n            });\r\n\r\n            // Remove old criteria\r\n            if (key !== -1) {\r\n                this._criteria.splice(key, 1);\r\n            }\r\n        }\r\n\r\n        this._criteria.push(criteria);\r\n        return this;\r\n    }\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c8fcda89203aee4ed368bea98c58943744effa55","contentHash":"c62d121840af8dc93782347da054a0e424cdc130bcb5311f0d4dd06589bf0094"},"D:\\easy\\app2\\src\\lib\\utils.ts":{"path":"D:\\easy\\app2\\src\\lib\\utils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":47}},"3":{"start":{"line":5,"column":29},"end":{"line":5,"column":91}},"4":{"start":{"line":6,"column":18},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":19},"end":{"line":7,"column":59}},"6":{"start":{"line":8,"column":10},"end":{"line":8,"column":27}},"7":{"start":{"line":17,"column":8},"end":{"line":17,"column":43}},"8":{"start":{"line":20,"column":8},"end":{"line":20,"column":63}},"9":{"start":{"line":20,"column":35},"end":{"line":20,"column":54}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":20}},"11":{"start":{"line":25,"column":17},"end":{"line":25,"column":113}},"12":{"start":{"line":25,"column":87},"end":{"line":25,"column":112}},"13":{"start":{"line":26,"column":25},"end":{"line":26,"column":49}},"14":{"start":{"line":27,"column":19},"end":{"line":31,"column":5}},"15":{"start":{"line":29,"column":12},"end":{"line":29,"column":30}},"16":{"start":{"line":32,"column":4},"end":{"line":35,"column":43}},"17":{"start":{"line":33,"column":35},"end":{"line":33,"column":48}},"18":{"start":{"line":36,"column":4},"end":{"line":39,"column":41}},"19":{"start":{"line":37,"column":35},"end":{"line":37,"column":48}},"20":{"start":{"line":40,"column":4},"end":{"line":43,"column":46}},"21":{"start":{"line":41,"column":35},"end":{"line":41,"column":48}},"22":{"start":{"line":44,"column":4},"end":{"line":47,"column":50}},"23":{"start":{"line":45,"column":35},"end":{"line":45,"column":48}},"24":{"start":{"line":48,"column":4},"end":{"line":51,"column":44}},"25":{"start":{"line":49,"column":35},"end":{"line":49,"column":48}},"26":{"start":{"line":52,"column":4},"end":{"line":55,"column":43}},"27":{"start":{"line":53,"column":35},"end":{"line":53,"column":43}},"28":{"start":{"line":56,"column":4},"end":{"line":58,"column":17}},"29":{"start":{"line":60,"column":0},"end":{"line":60,"column":44}},"30":{"start":{"line":62,"column":17},"end":{"line":62,"column":113}},"31":{"start":{"line":62,"column":87},"end":{"line":62,"column":112}},"32":{"start":{"line":63,"column":25},"end":{"line":63,"column":49}},"33":{"start":{"line":64,"column":17},"end":{"line":64,"column":117}},"34":{"start":{"line":64,"column":87},"end":{"line":64,"column":116}},"35":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"36":{"start":{"line":66,"column":8},"end":{"line":66,"column":27}},"37":{"start":{"line":68,"column":4},"end":{"line":68,"column":57}},"38":{"start":{"line":70,"column":0},"end":{"line":70,"column":36}},"39":{"start":{"line":73,"column":4},"end":{"line":73,"column":71}},"40":{"start":{"line":74,"column":23},"end":{"line":74,"column":38}},"41":{"start":{"line":75,"column":26},"end":{"line":76,"column":5}},"42":{"start":{"line":77,"column":4},"end":{"line":80,"column":54}},"43":{"start":{"line":81,"column":4},"end":{"line":84,"column":51}},"44":{"start":{"line":82,"column":35},"end":{"line":82,"column":47}},"45":{"start":{"line":85,"column":4},"end":{"line":87,"column":24}},"46":{"start":{"line":88,"column":21},"end":{"line":89,"column":5}},"47":{"start":{"line":90,"column":4},"end":{"line":93,"column":47}},"48":{"start":{"line":91,"column":35},"end":{"line":91,"column":52}},"49":{"start":{"line":94,"column":4},"end":{"line":97,"column":49}},"50":{"start":{"line":95,"column":35},"end":{"line":95,"column":54}},"51":{"start":{"line":98,"column":4},"end":{"line":101,"column":46}},"52":{"start":{"line":99,"column":35},"end":{"line":99,"column":60}},"53":{"start":{"line":102,"column":4},"end":{"line":105,"column":46}},"54":{"start":{"line":103,"column":35},"end":{"line":103,"column":41}},"55":{"start":{"line":106,"column":4},"end":{"line":109,"column":46}},"56":{"start":{"line":107,"column":35},"end":{"line":107,"column":49}},"57":{"start":{"line":110,"column":4},"end":{"line":112,"column":19}},"58":{"start":{"line":113,"column":4},"end":{"line":113,"column":38}},"59":{"start":{"line":115,"column":0},"end":{"line":115,"column":48}},"60":{"start":{"line":117,"column":4},"end":{"line":117,"column":33}},"61":{"start":{"line":119,"column":0},"end":{"line":119,"column":32}},"62":{"start":{"line":120,"column":0},"end":{"line":120,"column":54}},"63":{"start":{"line":122,"column":4},"end":{"line":124,"column":5}},"64":{"start":{"line":123,"column":8},"end":{"line":123,"column":21}},"65":{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},"66":{"start":{"line":126,"column":8},"end":{"line":126,"column":49}},"67":{"start":{"line":126,"column":42},"end":{"line":126,"column":47}},"68":{"start":{"line":128,"column":14},"end":{"line":128,"column":29}},"69":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"70":{"start":{"line":130,"column":8},"end":{"line":130,"column":35}},"71":{"start":{"line":130,"column":28},"end":{"line":130,"column":33}},"72":{"start":{"line":132,"column":4},"end":{"line":132,"column":17}},"73":{"start":{"line":134,"column":0},"end":{"line":134,"column":18}},"74":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"75":{"start":{"line":137,"column":8},"end":{"line":137,"column":49}},"76":{"start":{"line":139,"column":4},"end":{"line":141,"column":5}},"77":{"start":{"line":140,"column":8},"end":{"line":140,"column":68}},"78":{"start":{"line":142,"column":4},"end":{"line":142,"column":20}},"79":{"start":{"line":145,"column":4},"end":{"line":145,"column":44}},"80":{"start":{"line":147,"column":0},"end":{"line":147,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":31},"end":{"line":18,"column":5}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":23},"end":{"line":21,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":30},"end":{"line":20,"column":31}},"loc":{"start":{"line":20,"column":35},"end":{"line":20,"column":54}},"line":20},"3":{"name":"registerPaginate","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":25}},"loc":{"start":{"line":24,"column":34},"end":{"line":59,"column":1}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":76},"end":{"line":25,"column":77}},"loc":{"start":{"line":25,"column":87},"end":{"line":25,"column":112}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":8},"end":{"line":28,"column":9}},"loc":{"start":{"line":28,"column":22},"end":{"line":30,"column":9}},"line":28},"6":{"name":"(anonymous_6)","decl":{"start":{"line":33,"column":24},"end":{"line":33,"column":25}},"loc":{"start":{"line":33,"column":35},"end":{"line":33,"column":48}},"line":33},"7":{"name":"(anonymous_7)","decl":{"start":{"line":37,"column":24},"end":{"line":37,"column":25}},"loc":{"start":{"line":37,"column":35},"end":{"line":37,"column":48}},"line":37},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":24},"end":{"line":41,"column":25}},"loc":{"start":{"line":41,"column":35},"end":{"line":41,"column":48}},"line":41},"9":{"name":"(anonymous_9)","decl":{"start":{"line":45,"column":24},"end":{"line":45,"column":25}},"loc":{"start":{"line":45,"column":35},"end":{"line":45,"column":48}},"line":45},"10":{"name":"(anonymous_10)","decl":{"start":{"line":49,"column":24},"end":{"line":49,"column":25}},"loc":{"start":{"line":49,"column":35},"end":{"line":49,"column":48}},"line":49},"11":{"name":"(anonymous_11)","decl":{"start":{"line":53,"column":24},"end":{"line":53,"column":25}},"loc":{"start":{"line":53,"column":35},"end":{"line":53,"column":43}},"line":53},"12":{"name":"paginateType","decl":{"start":{"line":61,"column":9},"end":{"line":61,"column":21}},"loc":{"start":{"line":61,"column":30},"end":{"line":69,"column":1}},"line":61},"13":{"name":"(anonymous_13)","decl":{"start":{"line":62,"column":76},"end":{"line":62,"column":77}},"loc":{"start":{"line":62,"column":87},"end":{"line":62,"column":112}},"line":62},"14":{"name":"(anonymous_14)","decl":{"start":{"line":64,"column":76},"end":{"line":64,"column":77}},"loc":{"start":{"line":64,"column":87},"end":{"line":64,"column":116}},"line":64},"15":{"name":"registerFilterType","decl":{"start":{"line":71,"column":9},"end":{"line":71,"column":27}},"loc":{"start":{"line":71,"column":42},"end":{"line":114,"column":1}},"line":71},"16":{"name":"(anonymous_16)","decl":{"start":{"line":82,"column":24},"end":{"line":82,"column":25}},"loc":{"start":{"line":82,"column":35},"end":{"line":82,"column":47}},"line":82},"17":{"name":"(anonymous_17)","decl":{"start":{"line":91,"column":24},"end":{"line":91,"column":25}},"loc":{"start":{"line":91,"column":35},"end":{"line":91,"column":52}},"line":91},"18":{"name":"(anonymous_18)","decl":{"start":{"line":95,"column":24},"end":{"line":95,"column":25}},"loc":{"start":{"line":95,"column":35},"end":{"line":95,"column":54}},"line":95},"19":{"name":"(anonymous_19)","decl":{"start":{"line":99,"column":24},"end":{"line":99,"column":25}},"loc":{"start":{"line":99,"column":35},"end":{"line":99,"column":60}},"line":99},"20":{"name":"(anonymous_20)","decl":{"start":{"line":103,"column":24},"end":{"line":103,"column":25}},"loc":{"start":{"line":103,"column":35},"end":{"line":103,"column":41}},"line":103},"21":{"name":"(anonymous_21)","decl":{"start":{"line":107,"column":24},"end":{"line":107,"column":25}},"loc":{"start":{"line":107,"column":35},"end":{"line":107,"column":49}},"line":107},"22":{"name":"filterType","decl":{"start":{"line":116,"column":9},"end":{"line":116,"column":19}},"loc":{"start":{"line":116,"column":28},"end":{"line":118,"column":1}},"line":116},"23":{"name":"(anonymous_23)","decl":{"start":{"line":120,"column":25},"end":{"line":120,"column":26}},"loc":{"start":{"line":120,"column":37},"end":{"line":120,"column":40}},"line":120},"24":{"name":"tap","decl":{"start":{"line":121,"column":9},"end":{"line":121,"column":12}},"loc":{"start":{"line":121,"column":30},"end":{"line":133,"column":1}},"line":121},"25":{"name":"(anonymous_25)","decl":{"start":{"line":126,"column":36},"end":{"line":126,"column":37}},"loc":{"start":{"line":126,"column":42},"end":{"line":126,"column":47}},"line":126},"26":{"name":"(anonymous_26)","decl":{"start":{"line":130,"column":22},"end":{"line":130,"column":23}},"loc":{"start":{"line":130,"column":28},"end":{"line":130,"column":33}},"line":130},"27":{"name":"customizer","decl":{"start":{"line":135,"column":9},"end":{"line":135,"column":19}},"loc":{"start":{"line":135,"column":40},"end":{"line":143,"column":1}},"line":135},"28":{"name":"merge","decl":{"start":{"line":144,"column":9},"end":{"line":144,"column":14}},"loc":{"start":{"line":144,"column":24},"end":{"line":146,"column":1}},"line":144}},"branchMap":{"0":{"loc":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},{"start":{"line":65,"column":4},"end":{"line":67,"column":5}}],"line":65},"1":{"loc":{"start":{"line":122,"column":4},"end":{"line":124,"column":5}},"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":124,"column":5}},{"start":{"line":122,"column":4},"end":{"line":124,"column":5}}],"line":122},"2":{"loc":{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},{"start":{"line":125,"column":4},"end":{"line":127,"column":5}}],"line":125},"3":{"loc":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},{"start":{"line":129,"column":4},"end":{"line":131,"column":5}}],"line":129},"4":{"loc":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},{"start":{"line":136,"column":4},"end":{"line":138,"column":5}}],"line":136},"5":{"loc":{"start":{"line":139,"column":4},"end":{"line":141,"column":5}},"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":141,"column":5}},{"start":{"line":139,"column":4},"end":{"line":141,"column":5}}],"line":139}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":1,"62":1,"63":1,"64":0,"65":1,"66":1,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":22,"75":0,"76":22,"77":0,"78":22,"79":14,"80":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":0,"27":22,"28":14},"b":{"0":[0,0],"1":[0,1],"2":[1,0],"3":[0,0],"4":[0,22],"5":[0,22]},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\lib\\utils.ts","sources":["D:\\easy\\app2\\src\\lib\\utils.ts"],"names":[],"mappings":"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","sourcesContent":["import {Field, InputType, Int, ObjectType, registerEnumType} from \"@tngraphql/graphql\";\r\nimport {getMetadataStorage} from \"@tngraphql/graphql/dist/metadata/getMetadataStorage\";\r\nimport {GraphQLString} from \"graphql\";\r\nimport {Operator} from \"../app/GraphQL/Types/Operator\";\r\nconst _ = require('lodash');\r\n\r\n/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 5/25/2020\r\n * Time: 8:10 AM\r\n */\r\n\r\nclass StoreType {\r\n    static data: any = [];\r\n\r\n    static add(target, object) {\r\n        this.data.push({target, object});\r\n    }\r\n\r\n    static get(target) {\r\n        return this.data.find(d => d.target === target).object;\r\n    }\r\n}\r\n\r\nexport function registerPaginate(target: any) {\r\n    const type = getMetadataStorage().objectTypes.find(typeDef => typeDef.target === target);\r\n\r\n    const pageTypeName = `${type.name}Pagination`;\r\n\r\n    @ObjectType(pageTypeName, {description: 'Phân trang'})\r\n    class PageType {\r\n        @Field(returns => Int, {description: 'Số mục bắt đầu'})\r\n        from: number;\r\n\r\n        @Field(returns => Int, {description: 'Số mục kết thúc'})\r\n        to: number;\r\n\r\n        @Field(returns => Int, {description: 'Số lượng trên trang'})\r\n        perPage: number = 20;\r\n\r\n        @Field(returns => Int, {description: 'Trang hiện tại'})\r\n        currentPage: number;\r\n\r\n        @Field(returns => Int, {description: 'Tổng số'})\r\n        total: number;\r\n\r\n        @Field(returns => [target])\r\n        data: any;\r\n    }\r\n}\r\n\r\nexport function paginateType(target: any): any {\r\n    const type = getMetadataStorage().objectTypes.find(typeDef => typeDef.target === target);\r\n\r\n    const pageTypeName = `${type.name}Pagination`;\r\n\r\n    const page = getMetadataStorage().objectTypes.find(typeDef => typeDef.name === pageTypeName);\r\n\r\n    if (page) {\r\n        return page.target;\r\n    }\r\n\r\n    throw new Error(`[${pageTypeName}] can't register.`);\r\n}\r\n\r\nexport function registerFilterType(name, target: any) {\r\n    registerEnumType(target, {name: `FilterField${name}`});\r\n\r\n    const filterName = 'Filter' + name;\r\n\r\n    @InputType(`FilterGroup${name}`)\r\n    class FilterGroupType {\r\n        @Field()\r\n        operator: string;\r\n\r\n        @Field(returns => [FilterType])\r\n        items: string;\r\n    }\r\n\r\n    @InputType(filterName, {description: 'Phân trang'})\r\n    class FilterType {\r\n        @Field(returns => [FilterGroupType])\r\n        groups: string;\r\n\r\n        @Field(returns => Operator)\r\n        operator: Operator;\r\n\r\n        @Field(returns => [GraphQLString])\r\n        value: any;\r\n\r\n        @Field(returns => target)\r\n        field: string;\r\n\r\n        @Field(returns => [FilterType])\r\n        items: string;\r\n    }\r\n\r\n    StoreType.add(target, FilterType);\r\n}\r\n\r\nexport function filterType(target) {\r\n    return StoreType.get(target);\r\n}\r\n\r\nexport const AsyncFunction = (async () => {}).constructor;\r\n\r\nexport function tap(value: any, callback?: (value: any) => any): Promise<any> | any {\r\n    if (!callback) {\r\n        return value;\r\n    }\r\n\r\n    if (callback.constructor === AsyncFunction) {\r\n        return callback(value).then(() => value);\r\n    }\r\n\r\n    const r = callback(value);\r\n\r\n    if (r.constructor === Promise) {\r\n        return r.then(() => value);\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nfunction customizer(objValue, srcValue) {\r\n    if ( _.isArray(objValue) ) {\r\n        return _.uniq(objValue.concat(srcValue));\r\n    }\r\n    if ( _.isObject(objValue) ) {\r\n        return { ...objValue, ...srcValue };\r\n    }\r\n\r\n    return srcValue;\r\n}\r\n\r\nexport function merge(...args) {\r\n    return _.mergeWith(...args, customizer);\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c65ac5a96ea666ca874c09d643f9e40259734bc6","contentHash":"b47c6e873d86bbf9f143225930e5b31a5c333fa5ea83f1c29113c1a5d13822a6"},"D:\\easy\\app2\\src\\app\\GraphQL\\Types\\Operator.ts":{"path":"D:\\easy\\app2\\src\\app\\GraphQL\\Types\\Operator.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":18},"end":{"line":9,"column":47}},"2":{"start":{"line":11,"column":0},"end":{"line":31,"column":59}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":25}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":26}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":27}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":25}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":27}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":25}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":28}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":25}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":26}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":33}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":30}},"14":{"start":{"line":23,"column":4},"end":{"line":23,"column":37}},"15":{"start":{"line":24,"column":4},"end":{"line":24,"column":36}},"16":{"start":{"line":25,"column":4},"end":{"line":25,"column":43}},"17":{"start":{"line":26,"column":4},"end":{"line":26,"column":34}},"18":{"start":{"line":27,"column":4},"end":{"line":27,"column":28}},"19":{"start":{"line":28,"column":4},"end":{"line":28,"column":28}},"20":{"start":{"line":29,"column":4},"end":{"line":29,"column":26}},"21":{"start":{"line":30,"column":4},"end":{"line":30,"column":26}},"22":{"start":{"line":32,"column":0},"end":{"line":32,"column":59}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":1},"end":{"line":11,"column":2}},"loc":{"start":{"line":11,"column":21},"end":{"line":31,"column":1}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":14},"end":{"line":31,"column":57}},"type":"binary-expr","locations":[{"start":{"line":31,"column":14},"end":{"line":31,"column":30}},{"start":{"line":31,"column":35},"end":{"line":31,"column":56}}],"line":31}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\app\\GraphQL\\Types\\Operator.ts","sources":["D:\\easy\\app2\\src\\app\\GraphQL\\Types\\Operator.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;AAEH,gDAAoD;AAEpD,IAAY,QAoBX;AApBD,WAAY,QAAQ;IAChB,oBAAQ,CAAA;IACR,qBAAS,CAAA;IACT,sBAAU,CAAA;IACV,oBAAQ,CAAA;IACR,sBAAU,CAAA;IACV,oBAAQ,CAAA;IACR,uBAAW,CAAA;IACX,oBAAQ,CAAA;IACR,qBAAS,CAAA;IACT,4BAAgB,CAAA;IAChB,yBAAa,CAAA;IACb,gCAAoB,CAAA;IACpB,+BAAmB,CAAA;IACnB,sCAA0B,CAAA;IAC1B,6BAAiB,CAAA;IACjB,uBAAW,CAAA;IACX,uBAAW,CAAA;IACX,qBAAS,CAAA;IACT,qBAAS,CAAA;AACb,CAAC,EApBW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAoBnB;AAED,0BAAgB,CAAC,QAAQ,EAAE,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC","sourcesContent":["/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 5/26/2020\r\n * Time: 8:44 AM\r\n */\r\n\r\nimport {registerEnumType} from \"@tngraphql/graphql\";\r\n\r\nexport enum Operator {\r\n    eq = \"=\",\r\n    ne = \"<>\",\r\n    gte = \">=\",\r\n    gt = \">\",\r\n    lte = \"<=\",\r\n    lt = \"<\",\r\n    not = \"not\",\r\n    is = \"=\",\r\n    in = \"in\",\r\n    notIn = \"not in\",\r\n    like = \"like\",\r\n    notLike = \"not like\",\r\n    between = \"between\",\r\n    notBetween = \"not between\",\r\n    contains = \"like\",\r\n    and = \"AND\",\r\n    AND = \"AND\",\r\n    or = \"OR\",\r\n    OR = \"OR\"\r\n}\r\n\r\nregisterEnumType(Operator, {name: 'Operator'});"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"44afd426c0809cb5566534544d95d932cc3ab1f1","contentHash":"f047ff579b5a45545780aa9da454cbc967d37f5e8035c422a51d6d82da3adcec"},"D:\\easy\\app2\\src\\app\\GraphQL\\Types\\SortEnumType.ts":{"path":"D:\\easy\\app2\\src\\app\\GraphQL\\Types\\SortEnumType.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":18},"end":{"line":9,"column":47}},"2":{"start":{"line":11,"column":0},"end":{"line":14,"column":71}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":32}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":34}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":64}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":1},"end":{"line":11,"column":2}},"loc":{"start":{"line":11,"column":25},"end":{"line":14,"column":1}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":18},"end":{"line":14,"column":69}},"type":"binary-expr","locations":[{"start":{"line":14,"column":18},"end":{"line":14,"column":38}},{"start":{"line":14,"column":43},"end":{"line":14,"column":68}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\app\\GraphQL\\Types\\SortEnumType.ts","sources":["D:\\easy\\app2\\src\\app\\GraphQL\\Types\\SortEnumType.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;AAEH,gDAAoD;AAEpD,IAAY,YAGX;AAHD,WAAY,YAAY;IACpB,2BAAW,CAAA;IACX,6BAAa,CAAA;AACjB,CAAC,EAHW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAGvB;AAED,0BAAgB,CAAC,YAAY,EAAE,EAAC,IAAI,EAAE,WAAW,EAAC,CAAC,CAAC","sourcesContent":["/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 5/25/2020\r\n * Time: 6:45 PM\r\n */\r\n\r\nimport {registerEnumType} from \"@tngraphql/graphql\";\r\n\r\nexport enum SortEnumType {\r\n    ASC = 'asc',\r\n    DESC = 'desc',\r\n}\r\n\r\nregisterEnumType(SortEnumType, {name: 'SortValue'});"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d18f898ca20cbbe450d166d2fc1d8614eed3aa05","contentHash":"cfb0ecf893c557b7ae21f3a1e2bb15a5ce8733a84ca14d735ef552b18cc70234"},"D:\\easy\\app2\\src\\Repositories\\Criteria\\FilterCriteria.ts":{"path":"D:\\easy\\app2\\src\\Repositories\\Criteria\\FilterCriteria.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":9,"column":19},"end":{"line":9,"column":40}},"2":{"start":{"line":10,"column":19},"end":{"line":10,"column":62}},"3":{"start":{"line":11,"column":14},"end":{"line":11,"column":38}},"4":{"start":{"line":12,"column":20},"end":{"line":15,"column":1}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":16}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":33}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":52}},"8":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"9":{"start":{"line":26,"column":12},"end":{"line":26,"column":19}},"10":{"start":{"line":28,"column":8},"end":{"line":44,"column":9}},"11":{"start":{"line":28,"column":71},"end":{"line":28,"column":90}},"12":{"start":{"line":29,"column":12},"end":{"line":33,"column":15}},"13":{"start":{"line":30,"column":16},"end":{"line":32,"column":19}},"14":{"start":{"line":31,"column":20},"end":{"line":31,"column":80}},"15":{"start":{"line":35,"column":13},"end":{"line":44,"column":9}},"16":{"start":{"line":35,"column":73},"end":{"line":35,"column":137}},"17":{"start":{"line":36,"column":12},"end":{"line":40,"column":15}},"18":{"start":{"line":37,"column":16},"end":{"line":39,"column":19}},"19":{"start":{"line":38,"column":20},"end":{"line":38,"column":80}},"20":{"start":{"line":42,"column":13},"end":{"line":44,"column":9}},"21":{"start":{"line":43,"column":12},"end":{"line":43,"column":54}},"22":{"start":{"line":47,"column":22},"end":{"line":52,"column":9}},"23":{"start":{"line":53,"column":20},"end":{"line":55,"column":61}},"24":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"25":{"start":{"line":57,"column":12},"end":{"line":57,"column":33}},"26":{"start":{"line":59,"column":8},"end":{"line":68,"column":9}},"27":{"start":{"line":60,"column":26},"end":{"line":60,"column":62}},"28":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"29":{"start":{"line":62,"column":16},"end":{"line":62,"column":45}},"30":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"31":{"start":{"line":65,"column":16},"end":{"line":65,"column":42}},"32":{"start":{"line":67,"column":12},"end":{"line":67,"column":76}},"33":{"start":{"line":69,"column":8},"end":{"line":69,"column":67}},"34":{"start":{"line":72,"column":8},"end":{"line":72,"column":45}},"35":{"start":{"line":75,"column":8},"end":{"line":75,"column":46}},"36":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"37":{"start":{"line":79,"column":12},"end":{"line":79,"column":25}},"38":{"start":{"line":81,"column":8},"end":{"line":81,"column":65}},"39":{"start":{"line":84,"column":0},"end":{"line":84,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":26},"end":{"line":20,"column":5}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":29},"end":{"line":23,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":81},"end":{"line":45,"column":5}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":60},"end":{"line":28,"column":61}},"loc":{"start":{"line":28,"column":71},"end":{"line":28,"column":90}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":33},"end":{"line":29,"column":34}},"loc":{"start":{"line":29,"column":42},"end":{"line":33,"column":13}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":35},"end":{"line":30,"column":36}},"loc":{"start":{"line":30,"column":42},"end":{"line":32,"column":17}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":35,"column":63},"end":{"line":35,"column":64}},"loc":{"start":{"line":35,"column":73},"end":{"line":35,"column":137}},"line":35},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":33},"end":{"line":36,"column":34}},"loc":{"start":{"line":36,"column":42},"end":{"line":40,"column":13}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":37,"column":34},"end":{"line":37,"column":35}},"loc":{"start":{"line":37,"column":41},"end":{"line":39,"column":17}},"line":37},"9":{"name":"(anonymous_9)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":40},"end":{"line":70,"column":5}},"line":46},"10":{"name":"(anonymous_10)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":25},"end":{"line":73,"column":5}},"line":71},"11":{"name":"(anonymous_11)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":27},"end":{"line":76,"column":5}},"line":74},"12":{"name":"(anonymous_12)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":27},"end":{"line":82,"column":5}},"line":77}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":34},"end":{"line":24,"column":79}},"type":"default-arg","locations":[{"start":{"line":24,"column":43},"end":{"line":24,"column":79}}],"line":24},"1":{"loc":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},{"start":{"line":25,"column":8},"end":{"line":27,"column":9}}],"line":25},"2":{"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":51}},"type":"binary-expr","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":20}},{"start":{"line":25,"column":24},"end":{"line":25,"column":51}}],"line":25},"3":{"loc":{"start":{"line":28,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":44,"column":9}},{"start":{"line":28,"column":8},"end":{"line":44,"column":9}}],"line":28},"4":{"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":98}},"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":34}},{"start":{"line":28,"column":38},"end":{"line":28,"column":98}}],"line":28},"5":{"loc":{"start":{"line":35,"column":13},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":13},"end":{"line":44,"column":9}},{"start":{"line":35,"column":13},"end":{"line":44,"column":9}}],"line":35},"6":{"loc":{"start":{"line":35,"column":17},"end":{"line":35,"column":145}},"type":"binary-expr","locations":[{"start":{"line":35,"column":17},"end":{"line":35,"column":38}},{"start":{"line":35,"column":42},"end":{"line":35,"column":145}}],"line":35},"7":{"loc":{"start":{"line":35,"column":73},"end":{"line":35,"column":137}},"type":"binary-expr","locations":[{"start":{"line":35,"column":73},"end":{"line":35,"column":91}},{"start":{"line":35,"column":95},"end":{"line":35,"column":114}},{"start":{"line":35,"column":118},"end":{"line":35,"column":137}}],"line":35},"8":{"loc":{"start":{"line":42,"column":13},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":13},"end":{"line":44,"column":9}},{"start":{"line":42,"column":13},"end":{"line":44,"column":9}}],"line":42},"9":{"loc":{"start":{"line":53,"column":20},"end":{"line":55,"column":61}},"type":"cond-expr","locations":[{"start":{"line":54,"column":14},"end":{"line":54,"column":26}},{"start":{"line":55,"column":14},"end":{"line":55,"column":61}}],"line":53},"10":{"loc":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},{"start":{"line":56,"column":8},"end":{"line":58,"column":9}}],"line":56},"11":{"loc":{"start":{"line":59,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":68,"column":9}},{"start":{"line":59,"column":8},"end":{"line":68,"column":9}}],"line":59},"12":{"loc":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},{"start":{"line":61,"column":12},"end":{"line":63,"column":13}}],"line":61},"13":{"loc":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},{"start":{"line":64,"column":12},"end":{"line":66,"column":13}}],"line":64},"14":{"loc":{"start":{"line":72,"column":16},"end":{"line":72,"column":43}},"type":"binary-expr","locations":[{"start":{"line":72,"column":16},"end":{"line":72,"column":26}},{"start":{"line":72,"column":30},"end":{"line":72,"column":43}}],"line":72},"15":{"loc":{"start":{"line":75,"column":15},"end":{"line":75,"column":45}},"type":"binary-expr","locations":[{"start":{"line":75,"column":15},"end":{"line":75,"column":27}},{"start":{"line":75,"column":31},"end":{"line":75,"column":45}}],"line":75},"16":{"loc":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},{"start":{"line":78,"column":8},"end":{"line":80,"column":9}}],"line":78},"17":{"loc":{"start":{"line":81,"column":15},"end":{"line":81,"column":64}},"type":"binary-expr","locations":[{"start":{"line":81,"column":15},"end":{"line":81,"column":26}},{"start":{"line":81,"column":30},"end":{"line":81,"column":46}},{"start":{"line":81,"column":50},"end":{"line":81,"column":64}}],"line":81}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":38,"9":1,"10":37,"11":4,"12":2,"13":2,"14":4,"15":35,"16":16,"17":8,"18":8,"19":16,"20":27,"21":26,"22":26,"23":26,"24":26,"25":1,"26":26,"27":3,"28":3,"29":1,"30":2,"31":1,"32":1,"33":23,"34":55,"35":52,"36":43,"37":1,"38":42,"39":1},"f":{"0":1,"1":1,"2":38,"3":4,"4":2,"5":4,"6":16,"7":8,"8":16,"9":26,"10":55,"11":52,"12":43},"b":{"0":[18],"1":[1,37],"2":[38,37],"3":[2,35],"4":[37,2],"5":[8,27],"6":[35,8],"7":[16,15,15],"8":[26,1],"9":[3,23],"10":[1,25],"11":[3,23],"12":[1,2],"13":[1,1],"14":[55,13],"15":[52,2],"16":[1,42],"17":[42,41,41]},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\Repositories\\Criteria\\FilterCriteria.ts","sources":["D:\\easy\\app2\\src\\Repositories\\Criteria\\FilterCriteria.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 5/28/2020\r\n * Time: 4:58 PM\r\n */\r\nimport {Criteria} from \"./Criteria\";\r\nimport {ModelQueryBuilderContract} from \"@tngraphql/lucid/build/src/Contracts/Model/ModelQueryBuilderContract\";\r\nimport {LucidModel} from \"@tngraphql/lucid/build/src/Contracts/Model/LucidModel\";\r\nimport {BaseRepository} from \"../Lucid/BaseRepository\";\r\nimport {FilterContract} from \"../../Contracts/FilterContract\";\r\nimport {Operator} from \"../../app/GraphQL/Types/Operator\";\r\nimport Arr from \"../../lib/Arr\";\r\n\r\nconst whereMethod = {\r\n    [Operator.AND]: 'where',\r\n    [Operator.OR]: 'orWhere'\r\n}\r\n\r\nexport class FilterCriteria extends Criteria {\r\n    constructor(protected _filters: FilterContract) {\r\n        super();\r\n    }\r\n\r\n    public apply(query: ModelQueryBuilderContract<LucidModel>, repository: BaseRepository) {\r\n        FilterCriteria.filter(query, this._filters);\r\n    }\r\n\r\n    public static filter(query: ModelQueryBuilderContract<LucidModel>, filters: FilterContract, method = whereMethod[Operator.AND]) {\r\n        if (!filters || typeof filters !== \"object\") {\r\n            return;\r\n        }\r\n\r\n        if (this.is_group(filters) && filters.groups.filter((group) => this.is_item(group)).length) {\r\n            return query[method](query => {\r\n                filters.groups.map((x) => {\r\n                    return this.filter(query, x as FilterContract, whereMethod[filters.operator]);\r\n                })\r\n            });\r\n        } else if (this.is_item(filters) && filters.items.filter((item) => this.is_item(item) || this.is_group(item) || this.is_where(item)).length) {\r\n            return query[method](query => {\r\n                filters.items.map((x) => {\r\n                    return this.filter(query, x as FilterContract, whereMethod[filters.operator]);\r\n                })\r\n            });\r\n        } else if (this.is_where(filters)) {\r\n            return this.where(query, filters, method);\r\n        }\r\n    }\r\n\r\n    public static where(query: ModelQueryBuilderContract<LucidModel>, filter: FilterContract, method) {\r\n        const array = [\r\n            Operator.between,\r\n            Operator.notBetween,\r\n            Operator.in,\r\n            Operator.notIn\r\n        ];\r\n\r\n        let value = array.indexOf(filter.operator as Operator) !== -1\r\n            ? filter.value\r\n            : Arr.array_wrap(filter.value).join('');\r\n\r\n        if (filter.value === null) {\r\n            value = filter.value;\r\n        }\r\n\r\n        if (typeof filter.field === 'function') {\r\n            const field = filter.field(value, filter.operator);\r\n            if (typeof field === 'string') {\r\n                return query.whereRaw(field);\r\n            }\r\n\r\n            if (typeof field === \"function\") {\r\n                return query.where(field);\r\n            }\r\n\r\n            return query[method](field.field, filter.operator, field.value);\r\n        }\r\n\r\n        return query[method](filter.field, filter.operator, value);\r\n    }\r\n\r\n    public static is_item(item) {\r\n        return (item.items && item.operator);\r\n    }\r\n\r\n    public static is_group(group) {\r\n        return group.groups && group.operator;\r\n    }\r\n\r\n    public static is_where(where) {\r\n        if (!where) {\r\n            return false;\r\n        }\r\n\r\n        return where.field && 'value' in where && where.operator;\r\n    }\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5be266c7d66ac7c229de8662968411c7660c973e","contentHash":"fcc78bcfe095b1c5535978c31351b7d58df79e9ec19976d448e82e042191b1f2"},"D:\\easy\\app2\\src\\lib\\ResolveInfo.ts":{"path":"D:\\easy\\app2\\src\\lib\\ResolveInfo.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":16},"end":{"line":9,"column":34}},"2":{"start":{"line":10,"column":51},"end":{"line":10,"column":69}},"3":{"start":{"line":11,"column":10},"end":{"line":11,"column":27}},"4":{"start":{"line":14,"column":129},"end":{"line":14,"column":133}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":35}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":37}},"7":{"start":{"line":17,"column":8},"end":{"line":17,"column":37}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":37}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":29}},"11":{"start":{"line":21,"column":8},"end":{"line":21,"column":35}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":35}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":35}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":45}},"15":{"start":{"line":27,"column":21},"end":{"line":27,"column":23}},"16":{"start":{"line":28,"column":8},"end":{"line":33,"column":9}},"17":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"18":{"start":{"line":30,"column":16},"end":{"line":30,"column":25}},"19":{"start":{"line":32,"column":12},"end":{"line":32,"column":97}},"20":{"start":{"line":34,"column":8},"end":{"line":34,"column":22}},"21":{"start":{"line":37,"column":21},"end":{"line":37,"column":23}},"22":{"start":{"line":38,"column":8},"end":{"line":53,"column":9}},"23":{"start":{"line":39,"column":12},"end":{"line":52,"column":13}},"24":{"start":{"line":40,"column":39},"end":{"line":40,"column":93}},"25":{"start":{"line":41,"column":16},"end":{"line":41,"column":138}},"26":{"start":{"line":43,"column":17},"end":{"line":52,"column":13}},"27":{"start":{"line":44,"column":35},"end":{"line":44,"column":59}},"28":{"start":{"line":45,"column":16},"end":{"line":48,"column":17}},"29":{"start":{"line":46,"column":37},"end":{"line":46,"column":63}},"30":{"start":{"line":47,"column":20},"end":{"line":47,"column":106}},"31":{"start":{"line":50,"column":17},"end":{"line":52,"column":13}},"32":{"start":{"line":51,"column":16},"end":{"line":51,"column":107}},"33":{"start":{"line":54,"column":8},"end":{"line":54,"column":22}},"34":{"start":{"line":57,"column":28},"end":{"line":57,"column":64}},"35":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"36":{"start":{"line":59,"column":12},"end":{"line":59,"column":24}},"37":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"38":{"start":{"line":62,"column":12},"end":{"line":62,"column":49}},"39":{"start":{"line":64,"column":8},"end":{"line":64,"column":21}},"40":{"start":{"line":67,"column":0},"end":{"line":67,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":22},"end":{"line":25,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":33},"end":{"line":35,"column":5}},"line":26},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":44},"end":{"line":55,"column":5}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":20},"end":{"line":65,"column":5}},"line":56}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":22},"end":{"line":26,"column":31}},"type":"default-arg","locations":[{"start":{"line":26,"column":30},"end":{"line":26,"column":31}}],"line":26},"1":{"loc":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"type":"if","locations":[{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},{"start":{"line":29,"column":12},"end":{"line":31,"column":13}}],"line":29},"2":{"loc":{"start":{"line":39,"column":12},"end":{"line":52,"column":13}},"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":52,"column":13}},{"start":{"line":39,"column":12},"end":{"line":52,"column":13}}],"line":39},"3":{"loc":{"start":{"line":40,"column":39},"end":{"line":40,"column":93}},"type":"binary-expr","locations":[{"start":{"line":40,"column":39},"end":{"line":40,"column":50}},{"start":{"line":40,"column":54},"end":{"line":40,"column":93}}],"line":40},"4":{"loc":{"start":{"line":41,"column":51},"end":{"line":41,"column":137}},"type":"cond-expr","locations":[{"start":{"line":41,"column":68},"end":{"line":41,"column":130}},{"start":{"line":41,"column":133},"end":{"line":41,"column":137}}],"line":41},"5":{"loc":{"start":{"line":43,"column":17},"end":{"line":52,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":17},"end":{"line":52,"column":13}},{"start":{"line":43,"column":17},"end":{"line":52,"column":13}}],"line":43},"6":{"loc":{"start":{"line":45,"column":16},"end":{"line":48,"column":17}},"type":"if","locations":[{"start":{"line":45,"column":16},"end":{"line":48,"column":17}},{"start":{"line":45,"column":16},"end":{"line":48,"column":17}}],"line":45},"7":{"loc":{"start":{"line":50,"column":17},"end":{"line":52,"column":13}},"type":"if","locations":[{"start":{"line":50,"column":17},"end":{"line":52,"column":13}},{"start":{"line":50,"column":17},"end":{"line":52,"column":13}}],"line":50},"8":{"loc":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},{"start":{"line":58,"column":8},"end":{"line":60,"column":9}}],"line":58},"9":{"loc":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},{"start":{"line":61,"column":8},"end":{"line":63,"column":9}}],"line":61}},"s":{"0":1,"1":1,"2":1,"3":1,"4":13,"5":13,"6":13,"7":13,"8":13,"9":13,"10":13,"11":13,"12":13,"13":13,"14":13,"15":13,"16":13,"17":13,"18":1,"19":12,"20":13,"21":21,"22":21,"23":34,"24":32,"25":32,"26":2,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":21,"34":37,"35":37,"36":28,"37":9,"38":8,"39":1,"40":1},"f":{"0":13,"1":13,"2":21,"3":37},"b":{"0":[0],"1":[1,12],"2":[32,2],"3":[32,29],"4":[7,25],"5":[1,1],"6":[1,0],"7":[1,0],"8":[28,9],"9":[8,1]},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\lib\\ResolveInfo.ts","sources":["D:\\easy\\app2\\src\\lib\\ResolveInfo.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 5/26/2020\r\n * Time: 4:04 PM\r\n */\r\n\r\nimport { merge } from './utils';\r\nimport {GraphQLResolveInfo} from \"graphql\";\r\nimport {\r\n    FieldNode,\r\n    FragmentDefinitionNode,\r\n    OperationDefinitionNode,\r\n    SelectionSetNode\r\n} from \"graphql/language/ast\";\r\nimport {GraphQLObjectType, GraphQLOutputType} from \"graphql/type/definition\";\r\nimport {Path} from \"graphql/jsutils/Path\";\r\nimport {GraphQLSchema} from \"graphql/type/schema\";\r\nconst { FragmentSpreadNode, InlineFragmentNode } = require('graphql');\r\nconst _ = require('lodash');\r\n\r\nexport interface IFieldSelection {\r\n    [key: string]: boolean | IFieldSelection\r\n}\r\n\r\nexport class ResolveInfo {\r\n    public fieldName: any;\r\n    public fieldNodes: ReadonlyArray<FieldNode>;\r\n    public returnType: GraphQLOutputType;\r\n    public parentType: GraphQLObjectType;\r\n    public path: Path;\r\n    public schema: GraphQLSchema;\r\n    public rootValue: any;\r\n    public fragments: { [key: string]: FragmentDefinitionNode };\r\n    public operation: OperationDefinitionNode;\r\n    public variableValues: { [variableName: string]: any };\r\n\r\n    constructor(info: GraphQLResolveInfo) {\r\n        const {\r\n            fieldName,\r\n            fieldNodes,\r\n            returnType,\r\n            parentType,\r\n            path,\r\n            schema,\r\n            fragments,\r\n            rootValue,\r\n            operation,\r\n            variableValues\r\n        } = info;\r\n        this.fieldName = fieldName;\r\n        this.fieldNodes = fieldNodes;\r\n        this.returnType = returnType;\r\n        this.parentType = parentType;\r\n        this.path = path;\r\n        this.schema = schema;\r\n        this.fragments = fragments;\r\n        this.rootValue = rootValue;\r\n        this.operation = operation;\r\n        this.variableValues = variableValues;\r\n    }\r\n\r\n    public getFieldSelection(depth: number = 0): IFieldSelection {\r\n        let fields = {};\r\n\r\n        for( const fieldNode of this.fieldNodes ) {\r\n            if ( ! fieldNode.selectionSet ) {\r\n                continue;\r\n            }\r\n            fields = merge(fields, this.foldSelectionSet(fieldNode.selectionSet, depth));\r\n        }\r\n\r\n        return fields;\r\n    }\r\n\r\n    public foldSelectionSet(selectionSet: SelectionSetNode, descend: number) {\r\n        let fields = {};\r\n        for( const selectionNode of selectionSet.selections ) {\r\n            if ( selectionNode.kind === 'Field' ) {\r\n                const isSelectionSet = descend > 0 && ! this.empty(selectionNode.selectionSet);\r\n\r\n                fields[selectionNode.name.value] = isSelectionSet ? this.foldSelectionSet(selectionNode.selectionSet, descend - 1) : true;\r\n\r\n            } else if ( selectionNode.kind === 'FragmentSpread' ) {\r\n                const spreadName = selectionNode.name.value;\r\n                if ( this.fragments[spreadName] ) {\r\n                    const fragment = this.fragments[spreadName];\r\n                    fields = merge(\r\n                        this.foldSelectionSet(fragment.selectionSet, descend),\r\n                        fields\r\n                    );\r\n                }\r\n            } else if ( selectionNode.kind === 'InlineFragment' ) {\r\n                fields = merge(\r\n                    this.foldSelectionSet(selectionNode.selectionSet, descend),\r\n                    fields\r\n                );\r\n            }\r\n        }\r\n        return fields;\r\n    }\r\n\r\n    protected empty(mixedVar) {\r\n        const emptyValues = [undefined, null, false, 0, '', '0'];\r\n\r\n        if ( emptyValues.indexOf(mixedVar) !== -1 ) {\r\n            return true;\r\n        }\r\n\r\n        if ( typeof mixedVar === 'object' ) {\r\n            return !Object.keys(mixedVar).length;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c47ce6567972e20e8bccafc7cbfa6fe89b20796a","contentHash":"bf324552dd843107ccd08bfa1ac7be6bed2763f5d626f67fc827f67f95758fdb"},"D:\\easy\\app2\\src\\decorators\\SelectFields.ts":{"path":"D:\\easy\\app2\\src\\decorators\\SelectFields.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":9,"column":18},"end":{"line":9,"column":47}},"2":{"start":{"line":10,"column":29},"end":{"line":10,"column":91}},"3":{"start":{"line":11,"column":22},"end":{"line":11,"column":51}},"4":{"start":{"line":12,"column":21},"end":{"line":12,"column":55}},"5":{"start":{"line":13,"column":10},"end":{"line":13,"column":27}},"6":{"start":{"line":14,"column":21},"end":{"line":14,"column":22}},"7":{"start":{"line":15,"column":0},"end":{"line":19,"column":2}},"8":{"start":{"line":16,"column":4},"end":{"line":18,"column":7}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":31}},"10":{"start":{"line":21,"column":14},"end":{"line":21,"column":29}},"11":{"start":{"line":22,"column":4},"end":{"line":27,"column":5}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":36}},"13":{"start":{"line":25,"column":9},"end":{"line":27,"column":5}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":36}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":15}},"16":{"start":{"line":32,"column":15},"end":{"line":32,"column":39}},"17":{"start":{"line":33,"column":23},"end":{"line":33,"column":103}},"18":{"start":{"line":33,"column":87},"end":{"line":33,"column":102}},"19":{"start":{"line":34,"column":23},"end":{"line":34,"column":165}},"20":{"start":{"line":35,"column":4},"end":{"line":39,"column":5}},"21":{"start":{"line":36,"column":23},"end":{"line":36,"column":57}},"22":{"start":{"line":37,"column":22},"end":{"line":37,"column":87}},"23":{"start":{"line":37,"column":50},"end":{"line":37,"column":67}},"24":{"start":{"line":38,"column":8},"end":{"line":38,"column":44}},"25":{"start":{"line":40,"column":4},"end":{"line":40,"column":80}},"26":{"start":{"line":42,"column":0},"end":{"line":42,"column":30}},"27":{"start":{"line":44,"column":18},"end":{"line":44,"column":53}},"28":{"start":{"line":45,"column":4},"end":{"line":45,"column":42}},"29":{"start":{"line":47,"column":0},"end":{"line":47,"column":46}},"30":{"start":{"line":49,"column":19},"end":{"line":49,"column":21}},"31":{"start":{"line":50,"column":21},"end":{"line":50,"column":23}},"32":{"start":{"line":51,"column":4},"end":{"line":77,"column":5}},"33":{"start":{"line":52,"column":8},"end":{"line":76,"column":9}},"34":{"start":{"line":53,"column":12},"end":{"line":56,"column":13}},"35":{"start":{"line":54,"column":16},"end":{"line":54,"column":35}},"36":{"start":{"line":55,"column":16},"end":{"line":55,"column":25}},"37":{"start":{"line":57,"column":12},"end":{"line":57,"column":42}},"38":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"39":{"start":{"line":59,"column":16},"end":{"line":59,"column":35}},"40":{"start":{"line":61,"column":12},"end":{"line":67,"column":13}},"41":{"start":{"line":62,"column":33},"end":{"line":62,"column":58}},"42":{"start":{"line":63,"column":16},"end":{"line":63,"column":47}},"43":{"start":{"line":64,"column":16},"end":{"line":66,"column":19}},"44":{"start":{"line":70,"column":12},"end":{"line":75,"column":13}},"45":{"start":{"line":71,"column":33},"end":{"line":71,"column":58}},"46":{"start":{"line":72,"column":37},"end":{"line":72,"column":60}},"47":{"start":{"line":73,"column":16},"end":{"line":73,"column":47}},"48":{"start":{"line":74,"column":16},"end":{"line":74,"column":101}},"49":{"start":{"line":78,"column":4},"end":{"line":81,"column":6}},"50":{"start":{"line":83,"column":0},"end":{"line":83,"column":28}},"51":{"start":{"line":85,"column":21},"end":{"line":85,"column":45}},"52":{"start":{"line":86,"column":4},"end":{"line":86,"column":20}},"53":{"start":{"line":87,"column":4},"end":{"line":87,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":23},"end":{"line":15,"column":24}},"loc":{"start":{"line":15,"column":29},"end":{"line":19,"column":1}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":42},"end":{"line":16,"column":43}},"loc":{"start":{"line":16,"column":56},"end":{"line":18,"column":5}},"line":16},"2":{"name":"getType","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":16}},"loc":{"start":{"line":20,"column":23},"end":{"line":29,"column":1}},"line":20},"3":{"name":"getFields","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":18}},"loc":{"start":{"line":30,"column":47},"end":{"line":41,"column":1}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":82},"end":{"line":33,"column":83}},"loc":{"start":{"line":33,"column":87},"end":{"line":33,"column":102}},"line":33},"5":{"name":"(anonymous_5)","decl":{"start":{"line":37,"column":45},"end":{"line":37,"column":46}},"loc":{"start":{"line":37,"column":50},"end":{"line":37,"column":67}},"line":37},"6":{"name":"getFieldSelection","decl":{"start":{"line":43,"column":9},"end":{"line":43,"column":26}},"loc":{"start":{"line":43,"column":44},"end":{"line":46,"column":1}},"line":43},"7":{"name":"getField","decl":{"start":{"line":48,"column":9},"end":{"line":48,"column":17}},"loc":{"start":{"line":48,"column":33},"end":{"line":82,"column":1}},"line":48},"8":{"name":"getRelation","decl":{"start":{"line":84,"column":9},"end":{"line":84,"column":20}},"loc":{"start":{"line":84,"column":34},"end":{"line":88,"column":1}},"line":84}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":27,"column":5}},{"start":{"line":22,"column":4},"end":{"line":27,"column":5}}],"line":22},"1":{"loc":{"start":{"line":25,"column":9},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":9},"end":{"line":27,"column":5}},{"start":{"line":25,"column":9},"end":{"line":27,"column":5}}],"line":25},"2":{"loc":{"start":{"line":30,"column":25},"end":{"line":30,"column":45}},"type":"default-arg","locations":[{"start":{"line":30,"column":33},"end":{"line":30,"column":45}}],"line":30},"3":{"loc":{"start":{"line":34,"column":24},"end":{"line":34,"column":149}},"type":"cond-expr","locations":[{"start":{"line":34,"column":133},"end":{"line":34,"column":139}},{"start":{"line":34,"column":142},"end":{"line":34,"column":149}}],"line":34},"4":{"loc":{"start":{"line":34,"column":24},"end":{"line":34,"column":130}},"type":"binary-expr","locations":[{"start":{"line":34,"column":24},"end":{"line":34,"column":113}},{"start":{"line":34,"column":117},"end":{"line":34,"column":130}}],"line":34},"5":{"loc":{"start":{"line":34,"column":30},"end":{"line":34,"column":103}},"type":"cond-expr","locations":[{"start":{"line":34,"column":77},"end":{"line":34,"column":83}},{"start":{"line":34,"column":86},"end":{"line":34,"column":103}}],"line":34},"6":{"loc":{"start":{"line":34,"column":30},"end":{"line":34,"column":74}},"type":"binary-expr","locations":[{"start":{"line":34,"column":30},"end":{"line":34,"column":49}},{"start":{"line":34,"column":53},"end":{"line":34,"column":74}}],"line":34},"7":{"loc":{"start":{"line":35,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":39,"column":5}},{"start":{"line":35,"column":4},"end":{"line":39,"column":5}}],"line":35},"8":{"loc":{"start":{"line":43,"column":33},"end":{"line":43,"column":42}},"type":"default-arg","locations":[{"start":{"line":43,"column":41},"end":{"line":43,"column":42}}],"line":43},"9":{"loc":{"start":{"line":52,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":76,"column":9}},{"start":{"line":52,"column":8},"end":{"line":76,"column":9}}],"line":52},"10":{"loc":{"start":{"line":53,"column":12},"end":{"line":56,"column":13}},"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":56,"column":13}},{"start":{"line":53,"column":12},"end":{"line":56,"column":13}}],"line":53},"11":{"loc":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},{"start":{"line":58,"column":12},"end":{"line":60,"column":13}}],"line":58},"12":{"loc":{"start":{"line":61,"column":12},"end":{"line":67,"column":13}},"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":67,"column":13}},{"start":{"line":61,"column":12},"end":{"line":67,"column":13}}],"line":61},"13":{"loc":{"start":{"line":70,"column":12},"end":{"line":75,"column":13}},"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":75,"column":13}},{"start":{"line":70,"column":12},"end":{"line":75,"column":13}}],"line":70}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":3,"10":8,"11":8,"12":4,"13":4,"14":1,"15":3,"16":3,"17":3,"18":6,"19":3,"20":3,"21":0,"22":0,"23":0,"24":0,"25":3,"26":1,"27":4,"28":4,"29":1,"30":10,"31":10,"32":10,"33":15,"34":14,"35":5,"36":5,"37":9,"38":9,"39":2,"40":9,"41":2,"42":2,"43":2,"44":1,"45":1,"46":1,"47":1,"48":1,"49":10,"50":1,"51":3,"52":3,"53":3},"f":{"0":2,"1":3,"2":8,"3":3,"4":6,"5":0,"6":4,"7":10,"8":3},"b":{"0":[4,4],"1":[1,3],"2":[3],"3":[0,3],"4":[3,3],"5":[0,3],"6":[3,3],"7":[0,3],"8":[1],"9":[14,1],"10":[5,9],"11":[2,7],"12":[2,7],"13":[1,0]},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\decorators\\SelectFields.ts","sources":["D:\\easy\\app2\\src\\decorators\\SelectFields.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 5/29/2020\r\n * Time: 6:53 AM\r\n */\r\nimport {createParamDecorator} from \"@tngraphql/graphql\";\r\nimport {getMetadataStorage} from \"@tngraphql/graphql/dist/metadata/getMetadataStorage\";\r\nimport {LucidModel} from \"@tngraphql/lucid/build/src/Contracts/Model/LucidModel\";\r\nimport {IFieldSelection, ResolveInfo} from \"../lib/ResolveInfo\";\r\nimport {GraphQLObjectType, GraphQLOutputType, GraphQLResolveInfo} from \"graphql\";\r\nimport {ISelection} from \"../Contracts/SelectionCriteriaContract\";\r\nimport {GraphQLList, GraphQLNonNull} from \"graphql/type/definition\";\r\nconst _ = require('lodash');\r\nconst defaultDepth = 4;\r\n\r\nexport const SelectFields = () => {\r\n    return createParamDecorator(({info}) => {\r\n        return getFields(info);\r\n    });\r\n}\r\n\r\nfunction getType(type: GraphQLOutputType) {\r\n    let res = type.toString();\r\n    if (type instanceof GraphQLNonNull) {\r\n        return getType(type.ofType);\r\n    } else if (type instanceof GraphQLList) {\r\n        return getType(type.ofType);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function getFields(info: GraphQLResolveInfo, depth: number = defaultDepth): ISelection {\r\n    let type = getType(info.returnType);\r\n\r\n    const returnType = getMetadataStorage().objectTypes.find(x => x.name === type);\r\n\r\n    const isPaginate: boolean = returnType?.target?.name === 'PageType';\r\n\r\n    if (isPaginate) {\r\n        const fields = getFieldSelection(info, depth + 1);\r\n\r\n        const model = returnType.fields.find(x => x.name === 'data').getType()['model'];\r\n\r\n        return getField(fields.data, model);\r\n    }\r\n\r\n    return getField(getFieldSelection(info, depth), returnType.target['model'] as LucidModel);\r\n}\r\n\r\nexport function getFieldSelection(info: GraphQLResolveInfo, depth: number = 0): IFieldSelection {\r\n    const rinfo = new ResolveInfo(info);\r\n    return rinfo.getFieldSelection(depth);\r\n}\r\n\r\nexport function getField(fields, model: LucidModel): ISelection {\r\n    const result = [];\r\n    const preloads = [];\r\n\r\n    for( const field in fields ) {\r\n        if ( ! _.isObject(fields[field]) ) {\r\n            if ( ! model ) {\r\n                result.push(field);\r\n                continue;\r\n            }\r\n            result.push(model.primaryKey);\r\n\r\n            if (model.$hasColumn(field)) {\r\n                result.push(field);\r\n            }\r\n            if (model.$hasRelation(field)) {\r\n                const relation: any = getRelation(model, field);\r\n\r\n                result.push(relation.localKey);\r\n\r\n                preloads.push({\r\n                    name: field\r\n                });\r\n            }\r\n        } else {\r\n            if (model.$hasRelation(field)) {\r\n                const relation: any = getRelation(model, field);\r\n\r\n                const relatedModel = relation.relatedModel();\r\n                result.push(relation.localKey);\r\n\r\n                preloads.push({\r\n                    name: field,\r\n                    ...getField(fields[field], relatedModel)\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        columns: Array.from(new Set(result)),\r\n        preloads\r\n    }\r\n}\r\n\r\nfunction getRelation(model: LucidModel, name: string) {\r\n    const relation: any = model.$getRelation(name);\r\n    relation.boot();\r\n\r\n    return relation;\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"498b59beb365827ce0d6ad2a76dded6cd9753e22","contentHash":"4f8513e2d50a59fe0c9bd7956b91992824d7ad248c92bc4c20bb4b3333b0c936"},"D:\\easy\\app2\\src\\Repositories\\Criteria\\SelectionCriteria.ts":{"path":"D:\\easy\\app2\\src\\Repositories\\Criteria\\SelectionCriteria.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":9,"column":19},"end":{"line":9,"column":40}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":16}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":39}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":47}},"5":{"start":{"line":17,"column":8},"end":{"line":17,"column":61}},"6":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"7":{"start":{"line":21,"column":12},"end":{"line":21,"column":19}},"8":{"start":{"line":23,"column":8},"end":{"line":32,"column":9}},"9":{"start":{"line":24,"column":12},"end":{"line":27,"column":13}},"10":{"start":{"line":25,"column":16},"end":{"line":25,"column":44}},"11":{"start":{"line":26,"column":16},"end":{"line":26,"column":25}},"12":{"start":{"line":28,"column":12},"end":{"line":31,"column":15}},"13":{"start":{"line":29,"column":16},"end":{"line":29,"column":48}},"14":{"start":{"line":30,"column":16},"end":{"line":30,"column":62}},"15":{"start":{"line":35,"column":0},"end":{"line":35,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":29},"end":{"line":14,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":29},"end":{"line":18,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":35},"end":{"line":33,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":40},"end":{"line":28,"column":41}},"loc":{"start":{"line":28,"column":51},"end":{"line":31,"column":13}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"1":{"loc":{"start":{"line":20,"column":14},"end":{"line":20,"column":56}},"type":"binary-expr","locations":[{"start":{"line":20,"column":14},"end":{"line":20,"column":37}},{"start":{"line":20,"column":41},"end":{"line":20,"column":56}}],"line":20},"2":{"loc":{"start":{"line":24,"column":12},"end":{"line":27,"column":13}},"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":27,"column":13}},{"start":{"line":24,"column":12},"end":{"line":27,"column":13}}],"line":24},"3":{"loc":{"start":{"line":24,"column":16},"end":{"line":24,"column":140}},"type":"binary-expr","locations":[{"start":{"line":24,"column":16},"end":{"line":24,"column":75}},{"start":{"line":24,"column":79},"end":{"line":24,"column":140}}],"line":24},"4":{"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":74}},"type":"binary-expr","locations":[{"start":{"line":24,"column":18},"end":{"line":24,"column":48}},{"start":{"line":24,"column":52},"end":{"line":24,"column":74}}],"line":24},"5":{"loc":{"start":{"line":24,"column":81},"end":{"line":24,"column":139}},"type":"binary-expr","locations":[{"start":{"line":24,"column":81},"end":{"line":24,"column":112}},{"start":{"line":24,"column":116},"end":{"line":24,"column":139}}],"line":24}},"s":{"0":1,"1":1,"2":4,"3":4,"4":4,"5":4,"6":7,"7":3,"8":4,"9":4,"10":1,"11":1,"12":3,"13":3,"14":3,"15":1},"f":{"0":4,"1":4,"2":7,"3":3},"b":{"0":[3,4],"1":[7,5],"2":[1,3],"3":[4,1],"4":[4,3],"5":[1,0]},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\Repositories\\Criteria\\SelectionCriteria.ts","sources":["D:\\easy\\app2\\src\\Repositories\\Criteria\\SelectionCriteria.ts"],"names":[],"mappings":";;AAAA;;;;;GAKG;AACH,yCAAoC;AAMpC,MAAa,iBAAkB,SAAQ,mBAAQ;IAC3C,YAAsB,WAAuB;QACzC,KAAK,EAAE,CAAC;QADU,gBAAW,GAAX,WAAW,CAAY;IAE7C,CAAC;IAEM,KAAK,CAAC,KAA4C,EAAE,UAA0B;QACjF,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACzD,CAAC;IAEM,aAAa,CAAC,KAAK,EAAE,QAAqB;QAC7C,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC/C,OAAO;SACV;QAED,KAAK,IAAI,OAAO,IAAI,QAAQ,EAAE;YAC1B,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBAC9H,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC5B,SAAS;aACZ;YAED,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE;gBAClC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;SACN;IACL,CAAC;CACJ;AA3BD,8CA2BC","sourcesContent":["/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 5/28/2020\r\n * Time: 9:54 PM\r\n */\r\nimport {Criteria} from \"./Criteria\";\r\nimport {ModelQueryBuilderContract} from \"@tngraphql/lucid/build/src/Contracts/Model/ModelQueryBuilderContract\";\r\nimport {LucidModel} from \"@tngraphql/lucid/build/src/Contracts/Model/LucidModel\";\r\nimport {BaseRepository} from \"../Lucid/BaseRepository\";\r\nimport {IRelation, ISelection} from \"../../Contracts/SelectionCriteriaContract\";\r\n\r\nexport class SelectionCriteria extends Criteria {\r\n    constructor(protected _selections: ISelection) {\r\n        super();\r\n    }\r\n\r\n    public apply(query: ModelQueryBuilderContract<LucidModel>, repository: BaseRepository) {\r\n        query.select(this._selections.columns);\r\n        this.preloadNested(query, this._selections.preloads);\r\n    }\r\n\r\n    public preloadNested(query, preloads: IRelation[]) {\r\n        if (!(Array.isArray(preloads) && preloads.length)) {\r\n            return;\r\n        }\r\n\r\n        for (let preload of preloads) {\r\n            if (!(Array.isArray(preload.columns) && preload.columns.length) && !(Array.isArray(preload.preloads) && preload.preloads.length)) {\r\n                query.preload(preload.name);\r\n                continue;\r\n            }\r\n\r\n            query.preload(preload.name, builder => {\r\n                builder.select(preload.columns);\r\n                this.preloadNested(builder, preload.preloads);\r\n            });\r\n        }\r\n    }\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b09aaa22b1c2c9fffe1f1f982089d1687051b041","contentHash":"4e6df110b5631e5a3270218dbf2db86aeeaeb30cc35bc5b76c9a81a8026ea8c0"},"D:\\easy\\app2\\src\\Repositories\\Criteria\\SortByCriteria.ts":{"path":"D:\\easy\\app2\\src\\Repositories\\Criteria\\SortByCriteria.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":9,"column":19},"end":{"line":9,"column":40}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":16}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":29}},"4":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"5":{"start":{"line":17,"column":12},"end":{"line":17,"column":58}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":24},"end":{"line":14,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":29},"end":{"line":19,"column":5}},"line":15}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\Repositories\\Criteria\\SortByCriteria.ts","sources":["D:\\easy\\app2\\src\\Repositories\\Criteria\\SortByCriteria.ts"],"names":[],"mappings":";;AAAA;;;;;GAKG;AACH,yCAAoC;AAKpC,MAAa,cAAe,SAAQ,mBAAQ;IACxC,YAAsB,MAAW;QAC7B,KAAK,EAAE,CAAC;QADU,WAAM,GAAN,MAAM,CAAK;IAEjC,CAAC;IAEM,KAAK,CAAC,KAA4C,EAAE,UAA0B;QACjF,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;YAC3B,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SACjD;IACL,CAAC;CACJ;AAVD,wCAUC","sourcesContent":["/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 5/28/2020\r\n * Time: 4:52 PM\r\n */\r\nimport {Criteria} from \"./Criteria\";\r\nimport {ModelQueryBuilderContract} from \"@tngraphql/lucid/build/src/Contracts/Model/ModelQueryBuilderContract\";\r\nimport {LucidModel} from \"@tngraphql/lucid/build/src/Contracts/Model/LucidModel\";\r\nimport {BaseRepository} from \"../Lucid/BaseRepository\";\r\n\r\nexport class SortByCriteria extends Criteria {\r\n    constructor(protected sortBy: any) {\r\n        super();\r\n    }\r\n\r\n    public apply(query: ModelQueryBuilderContract<LucidModel>, repository: BaseRepository) {\r\n        for (let field in this.sortBy) {\r\n            repository.orderBy(field, this.sortBy[field]);\r\n        }\r\n    }\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d1cd7de7f8d9eadc68468e87951ccf2bb15cb4fb","contentHash":"76d18873b7001ecdb8be0387718d8977468952b1b31f5df5d889431fa19cdf48"},"D:\\easy\\app2\\src\\bootstrap\\app.ts":{"path":"D:\\easy\\app2\\src\\bootstrap\\app.ts","statementMap":{"0":{"start":{"line":2,"column":21},"end":{"line":2,"column":53}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":49}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":49}},"4":{"start":{"line":25,"column":12},"end":{"line":25,"column":69}},"5":{"start":{"line":26,"column":0},"end":{"line":26,"column":71}},"6":{"start":{"line":27,"column":0},"end":{"line":27,"column":71}},"7":{"start":{"line":28,"column":0},"end":{"line":28,"column":21}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\bootstrap\\app.ts","sources":["D:\\easy\\app2\\src\\bootstrap\\app.ts"],"names":[],"mappings":";AAAA,sDAAoD;AACpD,6BAA6B;AAC7B,kDAAgE;AAChE,kDAAgE;AAEhE;;;;;;;;GAQG;AACH,2BAA2B;AAC3B,qBAAqB;AACrB,YAAY;AACZ,6BAA6B;AAC7B,oBAAoB;AACpB,kEAAkE;AAClE,QAAQ;AACR,IAAI;AACJ,EAAE;AACF,uBAAuB;AAEvB,MAAM,GAAG,GAAG,IAAI,wBAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAG,KAAK,CAAC,CAAC,CAAC;AAE1D,GAAG,CAAC,SAAS,CAAC,sCAAsC,EAAE,eAAa,CAAC,CAAC;AAErE,GAAG,CAAC,SAAS,CAAC,sCAAsC,EAAE,eAAa,CAAC,CAAC;AAErE,iBAAS,GAAG,CAAC","sourcesContent":["import { Application } from '@tngraphql/illuminate';\r\nimport * as path from 'path';\r\nimport { Kernel as ConsoleKernel } from '../app/Console/Kernel';\r\nimport { Kernel as GraphQLKernel } from '../app/GraphQL/Kernel';\r\n\r\n/**\r\n * (c) Phan Trung Nguyên <nguyenpl117@gmail.com>\r\n * User: nguyenpl117\r\n * Date: 3/14/2020\r\n * Time: 5:22 AM\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\n// const log = console.log;\r\n// function trace() {\r\n//     try {\r\n//         throw new Error();\r\n//     } catch (e) {\r\n//         log.apply(log, [...arguments, e.stack.split('\\n')[2]]);\r\n//     }\r\n// }\r\n//\r\n// console.log = trace;\r\n\r\nconst app = new Application(path.join(__dirname , '../'));\r\n\r\napp.singleton('Illuminate/Foundation/GraphQL/Kernel', GraphQLKernel);\r\n\r\napp.singleton('Illuminate/Foundation/Console/Kernel', ConsoleKernel);\r\n\r\nexport = app;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"860f798520ed167614602c9cf114c58327019253","contentHash":"cd240d265402b008eca5c99a0899a4f71996c61ef05f61e93830bd9ac1f60f8b"},"D:\\easy\\app2\\src\\app\\Console\\Kernel.ts":{"path":"D:\\easy\\app2\\src\\app\\Console\\Kernel.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":32}},"2":{"start":{"line":13,"column":18},"end":{"line":13,"column":74}},"3":{"start":{"line":14,"column":16},"end":{"line":14,"column":43}},"4":{"start":{"line":15,"column":21},"end":{"line":15,"column":53}},"5":{"start":{"line":16,"column":22},"end":{"line":16,"column":77}},"6":{"start":{"line":17,"column":13},"end":{"line":28,"column":1}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":28}},"8":{"start":{"line":20,"column":8},"end":{"line":23,"column":10}},"9":{"start":{"line":24,"column":8},"end":{"line":26,"column":10}},"10":{"start":{"line":29,"column":0},"end":{"line":31,"column":11}},"11":{"start":{"line":32,"column":0},"end":{"line":32,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":18},"end":{"line":27,"column":5}},"line":18}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\app\\Console\\Kernel.ts","sources":["D:\\easy\\app2\\src\\app\\Console\\Kernel.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;GAQG;AACH,2EAA8E;AAC9E,4CAAyC;AACzC,sDAAgD;AAChD,8EAAyE;AAGzE,IAAa,MAAM,GAAnB,MAAa,MAAO,SAAQ,uBAAa;IAAzC;;QACW,aAAQ,GAAG;YACd,aAAK;YACL,yBAAW;SACd,CAAC;QAEF,aAAQ,GAAG;YACP,gBAAgB;SACnB,CAAC;IACN,CAAC;CAAA,CAAA;AATY,MAAM;IADlB,oBAAO,EAAE;GACG,MAAM,CASlB;AATY,wBAAM","sourcesContent":["/**\r\n * (c) Phan Trung Nguyên <nguyenpl117@gmail.com>\r\n * User: nguyenpl117\r\n * Date: 3/14/2020\r\n * Time: 9:32 AM\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\nimport { ConsoleKernel } from '@tngraphql/illuminate/dist/Foundation/Console';\r\nimport { Greet } from './Commands/Greet';\r\nimport { Service } from '@tngraphql/illuminate';\r\nimport {KeysCommand} from \"@tngraphql/auth/dist/src/command/KeysCommand\";\r\n\r\n@Service()\r\nexport class Kernel extends ConsoleKernel {\r\n    public commands = [\r\n        Greet,\r\n        KeysCommand\r\n    ];\r\n\r\n    classmap = [\r\n        'database/seeds'\r\n    ];\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2757f4cc84e6800297f3d67512307d1917e31464","contentHash":"f15e876e2f878214c1fc59947696a0ade7883b0730d3d5fbdb09ec5bd6db9ee3"},"D:\\easy\\app2\\src\\app\\Console\\Commands\\Greet.ts":{"path":"D:\\easy\\app2\\src\\app\\Console\\Commands\\Greet.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":32}},"2":{"start":{"line":13,"column":21},"end":{"line":13,"column":53}},"3":{"start":{"line":14,"column":18},"end":{"line":14,"column":47}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":47}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":35}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":31}},"7":{"start":{"line":32,"column":8},"end":{"line":32,"column":25}},"8":{"start":{"line":35,"column":0},"end":{"line":35,"column":28}},"9":{"start":{"line":36,"column":0},"end":{"line":39,"column":34}},"10":{"start":{"line":40,"column":0},"end":{"line":43,"column":36}},"11":{"start":{"line":44,"column":0},"end":{"line":47,"column":40}},"12":{"start":{"line":48,"column":0},"end":{"line":48,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":26},"end":{"line":33,"column":5}},"line":16}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\app\\Console\\Commands\\Greet.ts","sources":["D:\\easy\\app2\\src\\app\\Console\\Commands\\Greet.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;GAQG;AACH,sDAA4D;AAC5D,gDAAiD;AAEjD,MAAa,KAAM,SAAQ,wBAAW;IAWlC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAW;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,aAAa;QACb,iDAAiD;QACjD,kBAAkB;QAClB,MAAM;QACN,EAAE;QACF,qCAAqC;QACrC,gBAAgB;QAChB,2DAA2D;QAC3D,EAAE;QACF,KAAK;QACL,EAAE;QACF,wCAAwC;QACxC,OAAO,SAAS,CAAC;IACrB,CAAC;;AA3BM,iBAAW,GAAG,OAAO,CAAC;AAEf;IAAb,mBAAM,CAAC,IAAI,CAAC;;iCAAgB;AAG7B;IADC,cAAI,CAAC,MAAM,EAAE;;mCACM;AAGpB;IADC,eAAK,CAAC,MAAM,EAAE;;uCACU;AAT7B,sBA+BC","sourcesContent":["/**\r\n * (c) Phan Trung Nguyên <nguyenpl117@gmail.com>\r\n * User: nguyenpl117\r\n * Date: 3/14/2020\r\n * Time: 9:34 AM\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\nimport { BaseCommand, Inject } from '@tngraphql/illuminate';\r\nimport { flags, args } from '@tngraphql/console';\r\n\r\nexport class Greet extends BaseCommand {\r\n    static commandName = 'greet';\r\n\r\n    @Inject('db') private db: any\r\n\r\n    @args.string()\r\n    public name: string;\r\n\r\n    @flags.string()\r\n    public offClose: boolean;\r\n\r\n    async handle(...args: any[]): Promise<void> {\r\n        this.logger.info('migration:rollback');\r\n        console.log(this.offClose);\r\n        console.log(this.name);\r\n        // @ts-ignore\r\n        // await this.kernel.exec('migration:rollback', [\r\n        //     '--batch 0'\r\n        // ]);\r\n        //\r\n        // this.logger.info('migration:run');\r\n        // // @ts-ignore\r\n        // await this.kernel.exec('migration:run', []).then(() => {\r\n        //\r\n        // })\r\n        //\r\n        // await this.db.manager.closeAll(true);\r\n        return undefined;\r\n    }\r\n\r\n\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f25d1f23501836c50fb512f49f39dd86bbb86592","contentHash":"454d1e5e07e19541b1617c4882049d5714f1a6232fb6cfd2e2feb398ace653cd"},"D:\\easy\\app2\\src\\app\\GraphQL\\Kernel.ts":{"path":"D:\\easy\\app2\\src\\app\\GraphQL\\Kernel.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":32}},"2":{"start":{"line":13,"column":21},"end":{"line":13,"column":53}},"3":{"start":{"line":14,"column":14},"end":{"line":14,"column":41}},"4":{"start":{"line":15,"column":24},"end":{"line":15,"column":94}},"5":{"start":{"line":16,"column":23},"end":{"line":16,"column":82}},"6":{"start":{"line":17,"column":24},"end":{"line":17,"column":85}},"7":{"start":{"line":18,"column":13},"end":{"line":39,"column":1}},"8":{"start":{"line":20,"column":8},"end":{"line":20,"column":19}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":29}},"10":{"start":{"line":28,"column":8},"end":{"line":32,"column":10}},"11":{"start":{"line":33,"column":8},"end":{"line":33,"column":38}},"12":{"start":{"line":34,"column":8},"end":{"line":37,"column":9}},"13":{"start":{"line":35,"column":23},"end":{"line":35,"column":49}},"14":{"start":{"line":36,"column":12},"end":{"line":36,"column":40}},"15":{"start":{"line":40,"column":0},"end":{"line":43,"column":11}},"16":{"start":{"line":44,"column":0},"end":{"line":44,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":21},"end":{"line":38,"column":5}},"line":19}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":3,"14":3,"15":1,"16":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\app\\GraphQL\\Kernel.ts","sources":["D:\\easy\\app2\\src\\app\\GraphQL\\Kernel.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;GAQG;AACH,sDAA2D;AAC3D,0CAAqC;AACrC,+FAAyF;AACzF,mFAA8E;AAC9E,sFAAiF;AAIjF,IAAa,MAAM,GAAnB,MAAa,MAAO,SAAQ,6BAAa;IAiBrC,YAAY,GAAgB;QACxB,KAAK,CAAC,GAAG,CAAC,CAAC;QAjBf;;WAEG;QACO,eAAU,GAAG,EAAE,CAAC;QAE1B;;WAEG;QACO,oBAAe,GAAG;YACxB,GAAG,EAAE,SAAG;YACR,IAAI,EAAE,2BAAY;YAClB,GAAG,EAAE,6BAAa;SACrB,CAAA;QAES,sBAAiB,GAAG,IAAI,CAAC;QAK/B,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,eAAe,EAAE;YACnC,MAAM,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YACtC,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;SAC/B;IACL,CAAC;CACJ,CAAA;AAzBY,MAAM;IADlB,oBAAO,EAAE;6CAkBW,wBAAW;GAjBnB,MAAM,CAyBlB;AAzBY,wBAAM","sourcesContent":["/**\r\n * (c) Phan Trung Nguyên <nguyenpl117@gmail.com>\r\n * User: nguyenpl117\r\n * Date: 3/13/2020\r\n * Time: 2:08 PM\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\nimport {Application, Service} from '@tngraphql/illuminate';\r\nimport {Acl} from './Middleware/Acl';\r\nimport {GraphQLKernel} from '@tngraphql/illuminate/dist/Foundation/GraphQL/GraphQLKernel'\r\nimport {Authenticate} from \"@tngraphql/auth/dist/src/Middleware/Authenticate\";\r\nimport {CanMiddleware} from \"@tngraphql/guard/dist/src/Middleware/CanMiddleware\";\r\n\r\n\r\n@Service()\r\nexport class Kernel extends GraphQLKernel {\r\n    /**\r\n     * global middleware\r\n     */\r\n    protected middleware = [];\r\n\r\n    /**\r\n     * Register name middleware\r\n     */\r\n    protected routeMiddleware = {\r\n        acl: Acl,\r\n        auth: Authenticate,\r\n        can: CanMiddleware\r\n    }\r\n\r\n    protected nullableByDefault = true;\r\n\r\n    constructor(app: Application) {\r\n        super(app);\r\n\r\n        for (let item in this.routeMiddleware) {\r\n            const md = this.routeMiddleware[item];\r\n            md.prototype.app = this.app;\r\n        }\r\n    }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"45a98e6f9b080366909f7a2dbcdd38ab05aaaa51","contentHash":"e9c9f3aa09eea698e0aac223805995370a9125082120c01c2459b5a2c5fa8a4e"},"D:\\easy\\app2\\src\\app\\GraphQL\\Middleware\\Acl.ts":{"path":"D:\\easy\\app2\\src\\app\\GraphQL\\Middleware\\Acl.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":34}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":56}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":21}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":43},"end":{"line":8,"column":5}},"line":4}},"branchMap":{},"s":{"0":1,"1":0,"2":0,"3":0,"4":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\app\\GraphQL\\Middleware\\Acl.ts","sources":["D:\\easy\\app2\\src\\app\\GraphQL\\Middleware\\Acl.ts"],"names":[],"mappings":";;AAWA,MAAa,GAAG;IAGL,KAAK,CAAC,MAAM,CACf,IAAkB,EAClB,IAAyB,EACzB,YAAsB;QAEtB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAA;QACzB,OAAO,CAAC,GAAG,CAAC,aAAa,YAAY,SAAS,CAAC,CAAA;QAC/C,MAAM,IAAI,EAAE,CAAA;IAChB,CAAC;CACJ;AAZD,kBAYC","sourcesContent":["/**\r\n * (c) Phan Trung Nguyên <nguyenpl117@gmail.com>\r\n * User: nguyenpl117\r\n * Date: 3/12/2020\r\n * Time: 9:10 PM\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\nimport { ResolverData } from '@tngraphql/graphql';\r\n\r\nexport class Acl {\r\n    public app;\r\n\r\n    public async handle (\r\n        data: ResolverData,\r\n        next: () => Promise<void>,\r\n        allowedRoles: string[],\r\n    ) {\r\n        data.info.parentType.name\r\n        console.log(`enforces \"${allowedRoles}\" roles`)\r\n        await next()\r\n    }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cb5ea612d5bbd0b4ed28dd7e9fc3990e250c9969","contentHash":"1a003c6a8d47f4cca9ebe87d397ad602fad7292310bc68bbe05ba51ea8f317aa"},"D:\\easy\\app2\\src\\config\\app.ts":{"path":"D:\\easy\\app2\\src\\config\\app.ts","statementMap":{"0":{"start":{"line":11,"column":29},"end":{"line":11,"column":106}},"1":{"start":{"line":12,"column":31},"end":{"line":12,"column":79}},"2":{"start":{"line":13,"column":35},"end":{"line":13,"column":117}},"3":{"start":{"line":14,"column":34},"end":{"line":14,"column":104}},"4":{"start":{"line":15,"column":29},"end":{"line":15,"column":75}},"5":{"start":{"line":16,"column":37},"end":{"line":16,"column":113}},"6":{"start":{"line":17,"column":15},"end":{"line":17,"column":41}},"7":{"start":{"line":18,"column":30},"end":{"line":18,"column":95}},"8":{"start":{"line":19,"column":31},"end":{"line":19,"column":88}},"9":{"start":{"line":20,"column":30},"end":{"line":20,"column":77}},"10":{"start":{"line":21,"column":15},"end":{"line":21,"column":41}},"11":{"start":{"line":22,"column":12},"end":{"line":41,"column":1}},"12":{"start":{"line":37,"column":8},"end":{"line":37,"column":29}},"13":{"start":{"line":38,"column":8},"end":{"line":38,"column":23}},"14":{"start":{"line":42,"column":0},"end":{"line":42,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":36,"column":13},"end":{"line":36,"column":14}},"loc":{"start":{"line":36,"column":24},"end":{"line":39,"column":5}},"line":36}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\config\\app.ts","sources":["D:\\easy\\app2\\src\\config\\app.ts"],"names":[],"mappings":";AAAA;;;;;;;;GAQG;AAEH,2GAAwG;AACxG,gFAA6E;AAC7E,sHAAmH;AACnH,yGAAsG;AAEtG,4EAAyE;AACzE,kHAA+G;AAC/G,0CAAoD;AACpD,gGAA2F;AAC3F,yFAAoF;AACpF,8EAAyE;AACzE,0CAAoD;AAIpD,MAAM,GAAG,GAAc;IACnB,SAAS,EAAE;QACP,uCAAkB;QAClB,iDAAuB;QACvB,mDAAwB;QACxB,uDAA0B;QAC1B,0BAAmB;QACnB,yCAAmB;QACnB,2CAAoB;QACpB,yCAAmB;QACnB,0BAAmB;QAEnB,uCAAkB;QAClB,2CAAoB;KACvB;IACD,OAAO,EAAE,OAAO,CAAC,EAAE;QACf,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,OAAO,CAAC;IACnB,CAAC;IACD,cAAc;CACjB,CAAA;AAED,iBAAS,GAAG,CAAC","sourcesContent":["/**\r\n * (c) Phan Trung Nguyên <nguyenpl117@gmail.com>\r\n * User: nguyenpl117\r\n * Date: 3/11/2020\r\n * Time: 12:51 PM\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport { AceServiceProvider } from '@tngraphql/illuminate/dist/Foundation/Providers/AceServiceProvider';\r\nimport { RouteServiceProvider } from '../app/Providers/RouteServiceProvider';\r\nimport { ValidatorServiceProvider } from '@tngraphql/illuminate/dist/Foundation/Validate/ValidatorServiceProvider';\r\nimport { DatabaseServiceProvider } from '@tngraphql/illuminate/dist/Database/DatabaseServiceProvider';\r\nimport { Config } from 'apollo-server';\r\nimport { AppServiceProvider } from '../app/Providers/AppServiceProvider';\r\nimport { TranslationServiceProvider } from '@tngraphql/illuminate/dist/Translation/TranslationServiceProvider';\r\nimport {AuthServiceProvider} from '@tngraphql/auth';\r\nimport {HashServiceProvider} from \"@tngraphql/illuminate/dist/Hashing/HashServiceProvider\";\r\nimport {GuardServiceProvider} from \"@tngraphql/guard/dist/src/GuardServiceProvider\";\r\nimport {GateServiceProvider} from \"../app/Providers/GateServiceProvider\";\r\nimport {MailServiceProvider} from \"@tngraphql/mail\";\r\n\r\ntype AppConfig = Config | any;\r\n\r\nconst app: AppConfig = {\r\n    providers: [\r\n        AceServiceProvider,\r\n        DatabaseServiceProvider,\r\n        ValidatorServiceProvider,\r\n        TranslationServiceProvider,\r\n        AuthServiceProvider,\r\n        HashServiceProvider,\r\n        GuardServiceProvider,\r\n        GateServiceProvider,\r\n        MailServiceProvider,\r\n\r\n        AppServiceProvider,\r\n        RouteServiceProvider,\r\n    ],\r\n    context: context => {\r\n        console.log(context);\r\n        return context;\r\n    }\r\n    // formatError\r\n}\r\n\r\nexport = app;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"44edd7dfdea51bacc209181dbbe369746a7e4b64","contentHash":"2d6f70395617c322d30c71205bef6bdf8aac15a4de1f0631e4e47b4b69f7c515"},"D:\\easy\\app2\\src\\app\\Providers\\RouteServiceProvider.ts":{"path":"D:\\easy\\app2\\src\\app\\Providers\\RouteServiceProvider.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":12,"column":33},"end":{"line":12,"column":112}},"2":{"start":{"line":15,"column":8},"end":{"line":15,"column":28}},"3":{"start":{"line":23,"column":8},"end":{"line":23,"column":50}},"4":{"start":{"line":31,"column":8},"end":{"line":31,"column":32}},"5":{"start":{"line":35,"column":8},"end":{"line":35,"column":80}},"6":{"start":{"line":36,"column":8},"end":{"line":37,"column":47}},"7":{"start":{"line":36,"column":35},"end":{"line":36,"column":76}},"8":{"start":{"line":41,"column":0},"end":{"line":41,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":18},"end":{"line":24,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":10},"end":{"line":33,"column":5}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":23},"end":{"line":39,"column":5}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":29},"end":{"line":36,"column":30}},"loc":{"start":{"line":36,"column":35},"end":{"line":36,"column":76}},"line":36}},"branchMap":{},"s":{"0":1,"1":1,"2":29,"3":29,"4":29,"5":29,"6":29,"7":29,"8":1},"f":{"0":29,"1":29,"2":29,"3":29},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\app\\Providers\\RouteServiceProvider.ts","sources":["D:\\easy\\app2\\src\\app\\Providers\\RouteServiceProvider.ts"],"names":[],"mappings":";;AAAA;;;;;;;;GAQG;AACH,iHAA8G;AAE9G,MAAa,oBAAqB,SAAQ,+CAAsB;IAAhE;;QAEI;;;;;;WAMG;QACH,eAAU,GAAW,uBAAuB,CAAC;IAkBjD,CAAC;IAhBG;;;;OAIG;IACI,GAAG;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,4BAA4B;IAChC,CAAC;IAES,gBAAgB;QACtB,OAAO,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAA;QACvE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;aAC/D,SAAS,CAAC,sBAAsB,CAAC,CAAA;QAClC,8BAA8B;IACvC,CAAC;CACJ;AA3BD,oDA2BC","sourcesContent":["/**\r\n * (c) Phan Trung Nguyên <nguyenpl117@gmail.com>\r\n * User: nguyenpl117\r\n * Date: 3/16/2020\r\n * Time: 8:28 PM\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\nimport { RoutingServiceProvider } from '@tngraphql/illuminate/dist/Foundation/Routing/RoutingServiceProvider';\r\n\r\nexport class RouteServiceProvider extends RoutingServiceProvider {\r\n\r\n    /**\r\n     * This namespace is applied to your resolver routes.\r\n     *\r\n     * In addition, it is set as the URL generator's root namespace.\r\n     *\r\n     * @var string\r\n     */\r\n    _namespace: string = 'App/GraphQL/Resolvers';\r\n\r\n    /**\r\n     * Define the routes for the application.\r\n     *\r\n     * @return void\r\n     */\r\n    public map() {\r\n        this.mapDefaultRouter();\r\n        // this.mapMutationRouter();\r\n    }\r\n\r\n    protected mapDefaultRouter() {\r\n        delete require.cache[require.resolve(this.app.basePath('start/route'))]\r\n        this.app.route.group(() => require(this.app.basePath('start/route')))\r\n             .namespace('App/GraphQL/Resolves')\r\n             // .middleware(['acl:admin']);\r\n    }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9c35e25ff0afcfad946d1b2baee96fdefa1f0beb","contentHash":"0ca0fc7469942048f36bd940f786f2d216e31253ef2cc80d7b112d5b2b73b3f5"},"D:\\easy\\app2\\src\\app\\Providers\\AppServiceProvider.ts":{"path":"D:\\easy\\app2\\src\\app\\Providers\\AppServiceProvider.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":12,"column":21},"end":{"line":12,"column":53}},"2":{"start":{"line":13,"column":18},"end":{"line":13,"column":70}},"3":{"start":{"line":16,"column":8},"end":{"line":18,"column":11}},"4":{"start":{"line":17,"column":12},"end":{"line":17,"column":28}},"5":{"start":{"line":19,"column":21},"end":{"line":19,"column":29}},"6":{"start":{"line":20,"column":8},"end":{"line":23,"column":11}},"7":{"start":{"line":21,"column":12},"end":{"line":21,"column":32}},"8":{"start":{"line":22,"column":12},"end":{"line":22,"column":22}},"9":{"start":{"line":24,"column":8},"end":{"line":32,"column":11}},"10":{"start":{"line":25,"column":31},"end":{"line":25,"column":53}},"11":{"start":{"line":26,"column":12},"end":{"line":30,"column":13}},"12":{"start":{"line":27,"column":16},"end":{"line":27,"column":62}},"13":{"start":{"line":31,"column":12},"end":{"line":31,"column":30}},"14":{"start":{"line":37,"column":0},"end":{"line":37,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":15},"end":{"line":33,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":41},"end":{"line":16,"column":42}},"loc":{"start":{"line":16,"column":47},"end":{"line":18,"column":9}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":24},"end":{"line":20,"column":25}},"loc":{"start":{"line":20,"column":33},"end":{"line":23,"column":9}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":41},"end":{"line":24,"column":42}},"loc":{"start":{"line":24,"column":53},"end":{"line":32,"column":9}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":11},"end":{"line":35,"column":5}},"line":34}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":29,"4":0,"5":29,"6":29,"7":29,"8":29,"9":29,"10":0,"11":0,"12":0,"13":0,"14":1},"f":{"0":29,"1":0,"2":29,"3":0,"4":29},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\app\\Providers\\AppServiceProvider.ts","sources":["D:\\easy\\app2\\src\\app\\Providers\\AppServiceProvider.ts"],"names":[],"mappings":";;AAAA;;;;;;;;GAQG;AACH,sDAAwD;AACxD,uEAAoE;AAEpE,MAAa,kBAAmB,SAAQ,4BAAe;IACnD,QAAQ;QACJ,iBAAO,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE;YACxB,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;QAEtB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE;YACpB,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACpB,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,iBAAO,CAAC,MAAM,CAAC,MAAM,EAAE;YACnB,MAAM,UAAU,GAAQ,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC/C,IAAI;gBACA,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACjD;YAAC,OAAO,CAAC,EAAE;aACX;YACD,OAAO,UAAU,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAI;IACJ,CAAC;CACJ;AAzBD,gDAyBC","sourcesContent":["/**\r\n * (c) Phan Trung Nguyên <nguyenpl117@gmail.com>\r\n * User: nguyenpl117\r\n * Date: 3/26/2020\r\n * Time: 7:51 AM\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\nimport { ServiceProvider } from '@tngraphql/illuminate';\r\nimport { Context } from '@tngraphql/graphql/dist/resolvers/context';\r\n\r\nexport class AppServiceProvider extends ServiceProvider {\r\n    register(): void {\r\n        Context.getter('name', () => {\r\n            return 'nguyen';\r\n        });\r\n\r\n        const self = this.app;\r\n\r\n        this.app.booted((app) => {\r\n            app.setLocale('vi');\r\n            return {};\r\n        });\r\n\r\n        Context.getter('lang', function() {\r\n            const translator: any = self.use('translator');\r\n            try {\r\n                translator.setLocale(this.req.headers.locale);\r\n            } catch (e) {\r\n            }\r\n            return translator;\r\n        });\r\n    }\r\n\r\n    boot(): void {\r\n    }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a249227391db9e6000756867d63b7d19f7ca3c88","contentHash":"0027618ce0babc3c302ecda696c9d543c0e1d17b11f951eb1b7ee39bb0ca94c7"},"D:\\easy\\app2\\src\\app\\Providers\\GateServiceProvider.ts":{"path":"D:\\easy\\app2\\src\\app\\Providers\\GateServiceProvider.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":32}},"2":{"start":{"line":10,"column":21},"end":{"line":10,"column":53}},"3":{"start":{"line":11,"column":16},"end":{"line":11,"column":41}},"4":{"start":{"line":12,"column":26},"end":{"line":18,"column":1}},"5":{"start":{"line":14,"column":8},"end":{"line":16,"column":11}},"6":{"start":{"line":15,"column":12},"end":{"line":15,"column":63}},"7":{"start":{"line":19,"column":0},"end":{"line":21,"column":24}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":15},"end":{"line":17,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":40},"end":{"line":14,"column":41}},"loc":{"start":{"line":14,"column":50},"end":{"line":16,"column":9}},"line":14}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":29,"6":0,"7":1,"8":1},"f":{"0":29,"1":0},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\app\\Providers\\GateServiceProvider.ts","sources":["D:\\easy\\app2\\src\\app\\Providers\\GateServiceProvider.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,sDAA+D;AAC/D,0CAAoC;AAGpC,IAAa,mBAAmB,GAAhC,MAAa,mBAAoB,SAAQ,4BAAe;IAEpD,QAAQ;QACJ,YAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,IAAS,EAAE,EAAE;YAClC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;CACJ,CAAA;AAPY,mBAAmB;IAD/B,oBAAO,EAAE;GACG,mBAAmB,CAO/B;AAPY,kDAAmB","sourcesContent":["/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 3/30/2020\r\n * Time: 8:43 AM\r\n */\r\nimport {Service, ServiceProvider} from \"@tngraphql/illuminate\";\r\nimport {Gate} from \"@slynova/fence\";\r\n\r\n@Service()\r\nexport class GateServiceProvider extends ServiceProvider {\r\n\r\n    register(): void {\r\n        Gate.define('viewUser', (user: any) => {\r\n            return user.attributes.scopes.includes('viewUser');\r\n        });\r\n    }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0c50870a2413803584748cd2445bb90d974623eb","contentHash":"2a5344371ba5121675c14bd8a83f355f28b9cea791a02c0b5565e56f0573d88e"},"D:\\easy\\app2\\src\\config\\auth.ts":{"path":"D:\\easy\\app2\\src\\config\\auth.ts","statementMap":{"0":{"start":{"line":8,"column":20},"end":{"line":8,"column":47}},"1":{"start":{"line":9,"column":0},"end":{"line":26,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\config\\auth.ts","sources":["D:\\easy\\app2\\src\\config\\auth.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;AAEH,gDAA6C;AAE7C,iBAAS;IACL,QAAQ,EAAE;QACN,KAAK,EAAE,KAAK;QACZ,QAAQ,EAAE,OAAO;KACpB;IACD,MAAM,EAAE;QACJ,GAAG,EAAE;YACD,MAAM,EAAE,KAAK;SAChB;KACJ;IACD,SAAS,EAAE;QACP,KAAK,EAAE;YACH,MAAM,EAAE,OAAO;YACf,KAAK,EAAE,qBAAS;YAChB,KAAK,EAAE,EAAE;SACZ;KACJ;CAWJ,CAAA","sourcesContent":["/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 3/29/2020\r\n * Time: 10:21 AM\r\n */\r\n\r\nimport { UserModel } from '../app/UserModel';\r\n\r\nexport = {\r\n    defaults: {\r\n        guard: 'api',\r\n        provider: 'users'\r\n    },\r\n    guards: {\r\n        api: {\r\n            driver: 'jwt'\r\n        }\r\n    },\r\n    providers: {\r\n        users: {\r\n            driver: 'lucid',\r\n            model: UserModel,\r\n            table: '',\r\n        }\r\n    },\r\n    /*passwords: {\r\n        users: {\r\n            provider: '',\r\n            table: '',\r\n            expire: '',\r\n        }\r\n    },\r\n\r\n    public_key: '',\r\n    private_key: ''*/\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"988dcc90399f939a1fb9d7331524266cdb6e1c03","contentHash":"3857d88f7da528b92c2008314b75ab15ce000ce1913ca27209aa8480d770ca81"},"D:\\easy\\app2\\src\\app\\UserModel.ts":{"path":"D:\\easy\\app2\\src\\app\\UserModel.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":73}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":55}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":48}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":21}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":26}},"7":{"start":{"line":14,"column":0},"end":{"line":17,"column":38}},"8":{"start":{"line":18,"column":0},"end":{"line":21,"column":40}},"9":{"start":{"line":22,"column":0},"end":{"line":25,"column":44}},"10":{"start":{"line":26,"column":0},"end":{"line":29,"column":43}},"11":{"start":{"line":27,"column":30},"end":{"line":27,"column":57}},"12":{"start":{"line":30,"column":0},"end":{"line":30,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":11,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":24},"end":{"line":27,"column":25}},"loc":{"start":{"line":27,"column":30},"end":{"line":27,"column":57}},"line":27}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1},"f":{"0":1,"1":0},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\app\\UserModel.ts","sources":["D:\\easy\\app2\\src\\app\\UserModel.ts"],"names":[],"mappings":";;;AAUA,0EAAyE;AACzE,wDAAmD;AAEnD,iDAA4C;AAE5C,gBAAgB;AAChB,MAAa,SAAU,SAAQ,WAAI;IAe/B,MAAM,CAAC,IAAI;QACP,KAAK,CAAC,IAAI,EAAE,CAAC;IACjB,CAAC;;AAhBa,eAAK,GAAG,OAAO,CAAA;AAG7B;IADC,mBAAM,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;qCACV;AAGlB;IADC,mBAAM,EAAE;;uCACW;AAGpB;IADC,mBAAM,EAAE;;2CACe;AAGxB;IADC,mBAAM,CAAC,GAAG,EAAE,CAAC,2BAAY,EAAE,EAAC,UAAU,EAAE,QAAQ,EAAC,CAAC;;0CACR;AAb/C,8BAkBC","sourcesContent":["/**\r\n * (c) Phan Trung Nguyên <nguyenpl117@gmail.com>\r\n * User: nguyenpl117\r\n * Date: 3/13/2020\r\n * Time: 11:57 PM\r\n *\r\n * For the full copyright and license information, please view the LICENSE\r\n * file that was distributed with this source code.\r\n */\r\nimport {BaseModel} from \"@tngraphql/lucid/build/src/Orm/BaseModel\";\r\nimport {column, hasOne} from \"@tngraphql/lucid/build/src/Orm/Decorators\";\r\nimport {Auth} from \"@tngraphql/auth/dist/src/Auth\";\r\nimport {HasOne} from \"@tngraphql/lucid/build/src/Contracts/Orm/Relations/types\";\r\nimport {ProfileModel} from \"./ProfileModel\";\r\n\r\n// App/UserModel\r\nexport class UserModel extends Auth {\r\n    public static table = 'users'\r\n\r\n    @column({ isPrimary: true })\r\n    public id: string;\r\n\r\n    @column()\r\n    public name: string;\r\n\r\n    @column()\r\n    public password: string;\r\n\r\n    @hasOne(() => ProfileModel, {foreignKey: 'userId'})\r\n    public profile: HasOne<typeof ProfileModel>\r\n\r\n    static boot() {\r\n        super.boot();\r\n    }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2764b9b656c129322cd4a8bc5e4234c47dd649c6","contentHash":"884c2fa4931629c5ccc3c21018c61f4b4c52d235eedf8ad17203dc0ccb987c7a"},"D:\\easy\\app2\\src\\app\\ProfileModel.ts":{"path":"D:\\easy\\app2\\src\\app\\ProfileModel.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":71}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":73}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":32}},"5":{"start":{"line":15,"column":0},"end":{"line":18,"column":41}},"6":{"start":{"line":19,"column":0},"end":{"line":22,"column":45}},"7":{"start":{"line":23,"column":0},"end":{"line":26,"column":43}},"8":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\app\\ProfileModel.ts","sources":["D:\\easy\\app2\\src\\app\\ProfileModel.ts"],"names":[],"mappings":";;;AAAA,wEAAmE;AACnE,0EAAiE;AAEjE;;;;;GAKG;AAEH,MAAa,YAAa,SAAQ,qBAAS;;AACzB,kBAAK,GAAG,UAAU,CAAA;AAGhC;IADC,mBAAM,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;wCACV;AAGlB;IADC,mBAAM,EAAE;;4CACY;AAGrB;IADC,mBAAM,EAAE;;0CACU;AAVvB,oCAWC","sourcesContent":["import {BaseModel} from \"@tngraphql/lucid/build/src/Orm/BaseModel\";\r\nimport {column} from \"@tngraphql/lucid/build/src/Orm/Decorators\";\r\n\r\n/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 5/28/2020\r\n * Time: 9:08 PM\r\n */\r\n\r\nexport class ProfileModel extends BaseModel {\r\n    public static table = 'profiles'\r\n\r\n    @column({ isPrimary: true })\r\n    public id: string;\r\n\r\n    @column()\r\n    public userId: number\r\n\r\n    @column()\r\n    public name: string\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8084b018fb6ad62cc7cb0320dd0232ac6229a683","contentHash":"34847123e0e1cbcfd4f02269ce571d2b0e0487287aaaeb4b455b152474ae8911"},"D:\\easy\\app2\\src\\config\\database.ts":{"path":"D:\\easy\\app2\\src\\config\\database.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":8,"column":62}},"1":{"start":{"line":9,"column":15},"end":{"line":9,"column":30}},"2":{"start":{"line":10,"column":14},"end":{"line":10,"column":63}},"3":{"start":{"line":11,"column":23},"end":{"line":113,"column":1}},"4":{"start":{"line":114,"column":0},"end":{"line":114,"column":33}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\config\\database.ts","sources":["D:\\easy\\app2\\src\\config\\database.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;AAEH,+BAA2B;AAC3B,gEAA2D;AAE3D,MAAM,cAAc,GAAG;IACrB;;;;;;;;;MASE;IACF,UAAU,EAAE,SAAG,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAW;IAE5C,WAAW,EAAE;QACX;;;;;;;;;;UAUE;QACF,MAAM,EAAE;YACN,MAAM,EAAE,QAAQ;YAChB,UAAU,EAAE;gBACV,QAAQ,EAAE,WAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,WAAW,CAAC;aAC3C;YACD,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,KAAK;YAClB,KAAK,EAAE,SAAG,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,OAAO;SACxC;QAED;;;;;;;;;;UAUE;QACF,KAAK,EAAE;YACL,MAAM,EAAE,OAAO;YACf,UAAU,EAAE;gBACV,IAAI,EAAE,SAAG,CAAC,GAAG,CAAC,YAAY,EAAE,WAAW,CAAW;gBAClD,IAAI,EAAE,MAAM,CAAC,SAAG,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBACzC,IAAI,EAAE,SAAG,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAW;gBAC7C,QAAQ,EAAE,SAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,UAAU,CAAW;gBACzD,QAAQ,EAAE,SAAG,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAW;aACnD;YACD,WAAW,EAAE,KAAK;YAClB,KAAK,EAAE,SAAG,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,OAAO;SACxC;QAED;;;;;;;;;;UAUE;QACF,EAAE,EAAE;YACF,MAAM,EAAE,IAAI;YACZ,UAAU,EAAE;gBACV,IAAI,EAAE,SAAG,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,CAAW;gBAC/C,IAAI,EAAE,MAAM,CAAC,SAAG,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;gBACtC,IAAI,EAAE,SAAG,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAW;gBAC3C,QAAQ,EAAE,SAAG,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAW;gBACnD,QAAQ,EAAE,SAAG,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAW;aAChD;YACD,WAAW,EAAE,KAAK;YAClB,KAAK,EAAE,SAAG,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,OAAO;SACxC;QAED,KAAK,EAAE;YACL,MAAM,EAAE,OAAO;YACf,UAAU,EAAE;gBACV,IAAI,EAAE,SAAG,CAAC,GAAG,CAAC,YAAY,CAAC;gBAC3B,MAAM,EAAE,SAAG,CAAC,GAAG,CAAC,cAAc,CAAC;gBAC/B,QAAQ,EAAE,SAAG,CAAC,GAAG,CAAC,gBAAgB,CAAC;gBACnC,QAAQ,EAAE,QAAQ;aACnB;SACF;KACF;IAED;;;;;;;;;;;MAWE;IACF,GAAG,EAAE,EACJ;CACF,CAAA;AAED,kBAAe,cAAc,CAAA","sourcesContent":["/**\r\n * Config source: https://git.io/JesV9\r\n *\r\n * Feel free to let us know via PR, if you find something broken in this config\r\n * file.\r\n */\r\n\r\nimport { join } from 'path'\r\nimport {Env} from \"@tngraphql/illuminate/dist/Support/Env\";\r\n\r\nconst databaseConfig = {\r\n  /*\r\n  |--------------------------------------------------------------------------\r\n  | Connection\r\n  |--------------------------------------------------------------------------\r\n  |\r\n  | The primary connection for making database queries across the application\r\n  | You can use any key from the `connections` object defined in this same\r\n  | file.\r\n  |\r\n  */\r\n  connection: Env.get('DB', 'mysql') as string,\r\n\r\n  connections: {\r\n    /*\r\n    |--------------------------------------------------------------------------\r\n    | Sqlite\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    | Configuration for the Sqlite database.  Make sure to install the driver\r\n    | from npm when using this connection\r\n    |\r\n    | npm i sqlite3\r\n    |\r\n    */\r\n    sqlite: {\r\n      client: 'sqlite',\r\n      connection: {\r\n        filename: join(process.cwd(), 'db.sqlite'),\r\n      },\r\n      useNullAsDefault: true,\r\n      healthCheck: false,\r\n      debug: Env.get('LOG_LEVEL') === 'trace',\r\n    },\r\n\r\n    /*\r\n    |--------------------------------------------------------------------------\r\n    | Mysql config\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    | Configuration for Mysql database. Make sure to install the driver\r\n    | from npm when using this connection\r\n    |\r\n    | npm i mysql\r\n    |\r\n    */\r\n    mysql: {\r\n      client: 'mysql',\r\n      connection: {\r\n        host: Env.get('MYSQL_HOST', '127.0.0.1') as string,\r\n        port: Number(Env.get('MYSQL_PORT', 3306)),\r\n        user: Env.get('MYSQL_USER', 'root') as string,\r\n        password: Env.get('MYSQL_PASSWORD', '123123As') as string,\r\n        database: Env.get('MYSQL_NAME', 'lucid') as string,\r\n      },\r\n      healthCheck: false,\r\n      debug: Env.get('LOG_LEVEL') === 'trace',\r\n    },\r\n\r\n    /*\r\n    |--------------------------------------------------------------------------\r\n    | PostgreSQL config\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    | Configuration for PostgreSQL database. Make sure to install the driver\r\n    | from npm when using this connection\r\n    |\r\n    | npm i pg\r\n    |\r\n    */\r\n    pg: {\r\n      client: 'pg',\r\n      connection: {\r\n        host: Env.get('DB_HOST', '127.0.0.1') as string,\r\n        port: Number(Env.get('DB_PORT', 5432)),\r\n        user: Env.get('DB_USER', 'lucid') as string,\r\n        password: Env.get('DB_PASSWORD', 'lucid') as string,\r\n        database: Env.get('DB_NAME', 'lucid') as string,\r\n      },\r\n      healthCheck: false,\r\n      debug: Env.get('LOG_LEVEL') === 'trace',\r\n    },\r\n\r\n    mssql: {\r\n      client: 'mssql',\r\n      connection: {\r\n        user: Env.get('MSSQL_USER'),\r\n        server: Env.get('MSSQL_SERVER'),\r\n        password: Env.get('MSSQL_PASSWORD'),\r\n        database: 'master',\r\n      },\r\n    }\r\n  },\r\n\r\n  /*\r\n  |--------------------------------------------------------------------------\r\n  | Orm Configuration\r\n  |--------------------------------------------------------------------------\r\n  |\r\n  | Following are some of the configuration options to tweak the conventional\r\n  | settings of the ORM. For example:\r\n  |\r\n  | - Define a custom function to compute the default table name for a given model.\r\n  | - Or define a custom function to compute the primary key for a given model.\r\n  |\r\n  */\r\n  orm: {\r\n  },\r\n}\r\n\r\nexport default databaseConfig\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e5228ba328f67c9294c0e60e89182c840078a640","contentHash":"82a688e73b6a350b1f558286e11c727c739287455a14ddda61ce0e7e5d372c5e"},"D:\\easy\\app2\\src\\config\\mail.ts":{"path":"D:\\easy\\app2\\src\\config\\mail.ts","statementMap":{"0":{"start":{"line":8,"column":0},"end":{"line":22,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\config\\mail.ts","sources":["D:\\easy\\app2\\src\\config\\mail.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;AAEH,iBAAS;IACL,OAAO,EAAE,MAAM;IACf,OAAO,EAAE;QACL,IAAI,EAAE;YACF,SAAS,EAAE,MAAM;YACjB,IAAI,EAAE,qBAAqB;YAC3B,IAAI,EAAE,GAAG;YACT,MAAM,EAAE,KAAK;YACb,IAAI,EAAE;gBACF,IAAI,EAAE,iCAAiC;gBACvC,IAAI,EAAE,oBAAoB,CAAE,8BAA8B;aAC7D;SACJ;KACJ;CACJ,CAAA","sourcesContent":["/**\r\n * Created by Phan Trung Nguyên.\r\n * User: nguyenpl117\r\n * Date: 5/21/2020\r\n * Time: 9:09 AM\r\n */\r\n\r\nexport = {\r\n    default: 'smtp',\r\n    mailers: {\r\n        smtp: {\r\n            transport: 'smtp',\r\n            host: 'smtp.ethereal.email',\r\n            port: 587,\r\n            secure: false,\r\n            auth: {\r\n                user: 'ek2dpcz6ty2domd6@ethereal.email', // generated ethereal user\r\n                pass: 'WTJY4U17962asHPgPV'  // generated ethereal password\r\n            }\r\n        }\r\n    }\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6773335a9f58ca4357b1e0ab85f02573e98fe96b","contentHash":"a6e0e9e437c382c01a755ab25149abe71a9f8d507697f24fd58ccb3f31154e0b"},"D:\\easy\\app2\\src\\start\\route.ts":{"path":"D:\\easy\\app2\\src\\start\\route.ts","statementMap":{"0":{"start":{"line":13,"column":0},"end":{"line":13,"column":62}},"1":{"start":{"line":14,"column":18},"end":{"line":14,"column":71}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":48}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":48}}},"fnMap":{},"branchMap":{},"s":{"0":29,"1":29,"2":29,"3":29},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:\\easy\\app2\\src\\start\\route.ts","sources":["D:\\easy\\app2\\src\\start\\route.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;EAUE;;AAEF,wEAAmE;AAEnE,gDAAgD;AAChD,EAAE;AACF,kDAAkD;AAClD,kDAAkD;AAClD,qDAAqD;AAErD,eAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,CAAA;AACrC,eAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,CAAA","sourcesContent":["/*\r\n|--------------------------------------------------------------------------\r\n| GraphQL Query OR Mutation Routes\r\n|--------------------------------------------------------------------------\r\n|\r\n| Đây là nơi đăng ký các Queries hoặc Mutations cho ứng dụng của bạn.\r\n| các Queries hoặc Mutations được tải bởi RouteServiceProvider trong một nhóm\r\n| \"default\" có chứa các `middleware`.\r\n| Now create something great!\r\n|\r\n*/\r\n\r\nimport { Route } from '@tngraphql/illuminate/dist/Support/Facades';\r\n\r\n// Route.query('user', 'ExampleResolve.create');\r\n//\r\n// Route.query('user234', 'ExampleResolve.sfasf2')\r\n// Route.mutation('login', 'ExampleResolve.login')\r\n// Route.query('sentmail', 'ExampleResolve.sentmail')\r\n\r\nRoute.resource('user', 'UserResolve')\r\nRoute.resource('mony', 'MonyResolve')\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2c7f2aa930018f6558f7851fe83abf573228c27e","contentHash":"830488e1903d83cce96efe64dbb96f9642c11e3543f4f6731f11f51df5ad0496"}}